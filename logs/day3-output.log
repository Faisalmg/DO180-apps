[student@workstation ~]$ lab openshift-s2i start

Setting up workstation for the Guided Excercise: Creating a Containerized Application with Source-to-Image

 · Installing the tree command.................................  SUCCESS
 Checking local clone of the applications repository:
 · Folder '/home/student/DO180-apps' is a git repo.............  SUCCESS
 · Git repo '/home/student/DO180-apps' has no pending changes..  SUCCESS
 Verifying the OpenShift cluster is running:
 · Log in on OpenShift.........................................  SUCCESS
 · Check the internal registry is up and running...............  SUCCESS
 · Ensuring the 'developer-s2i' project does not exist.........  SUCCESS
[student@workstation ~]$ cd ~/DO180-apps
[student@workstation DO180-apps]$ git checkout master
Already on 'master'
Your branch is up to date with 'origin/master'.
[student@workstation DO180-apps]$ git checkout -b s2i
Switched to a new branch 's2i'
[student@workstation DO180-apps]$ git push -u origin s2i
Username for 'https://github.com': Faisalmg
Password for 'https://Faisalmg@github.com': 
Branch 's2i' set up to track remote branch 's2i' from 'origin'.
Everything up-to-date
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ vim /home/student/DO180-apps/php-helloworld/index.php 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ source /usr/local/etc/ocp4.config
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

[student@workstation DO180-apps]$ oc new-project ${RHT_OCP4_DEV_USER}-s2i
Now using project "developer-s2i" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app ruby~https://github.com/sclorg/ruby-ex.git

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ oc new-app --as-deployment-config php:7.3 --name=php-helloworld https://github.com/${RHT_OCP4_GITHUB_USER}/DO180-apps#s2i --context-dir php-helloworld
--> Found image 988e5d4 (11 months old) in image stream "openshift/php" under tag "7.3" for "php:7.3"

    Apache 2.4 with PHP 7.3 
    ----------------------- 
    PHP 7.3 available as container is a base platform for building and running various PHP 7.3 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.

    Tags: builder, php, php73, rh-php73

    * The source repository appears to match: php
    * A source build using source code from https://github.com/Faisalmg/DO180-apps#s2i will be created
      * The resulting image will be pushed to image stream tag "php-helloworld:latest"
      * Use 'oc start-build' to trigger a new build
    * This image will be deployed in deployment config "php-helloworld"
    * Ports 8080/tcp, 8443/tcp will be load balanced by service "php-helloworld"
      * Other containers can access this service through the hostname "php-helloworld"

--> Creating resources ...
    imagestream.image.openshift.io "php-helloworld" created
    buildconfig.build.openshift.io "php-helloworld" created
    deploymentconfig.apps.openshift.io "php-helloworld" created
    service "php-helloworld" created
--> Success
    Build scheduled, use 'oc logs -f bc/php-helloworld' to track its progress.
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose svc/php-helloworld' 
    Run 'oc status' to view your app.
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ oc get pods
NAME                     READY   STATUS    RESTARTS   AGE
php-helloworld-1-build   1/1     Running   0          21s
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ oc logs --all-containers -f php-helloworld-1-build
Caching blobs under "/var/cache/blobs".
Getting image source signatures
Copying blob sha256:14e4b218199e7985dbeca760da0fa9b969ca5fdaae5095a273cd924afa6898e9
Copying blob sha256:f659c5c779ac4373302bfe3dc7d713c59cf9ec9f179a71e9b26336a51043fad2
Copying blob sha256:e7021e0589e97471d99c4265b7c8e64da328e48f116b5f260353b2e0a2adb373
Copying blob sha256:fc5b206e9329a1674dd9e8efbee45c9be28d0d0dcbabba3c6bb67a2f22cfcf2a
Copying blob sha256:9e7a6dc796f0a75c560158a9f9e30fb8b5a90cb53edce9ffbdf5778406e4de39
Copying config sha256:988e5d4c035d1585f006d0c57a0cfe4bc9f8aae412585f4a6b8fed87da45105f
Writing manifest to image destination
Storing signatures
Generating dockerfile with builder image image-registry.openshift-image-registry.svc:5000/openshift/php@sha256:962d936b00f4953d977be9b85268a289bf2f9d49df4d51b408a7c7835a551103
STEP 1: FROM image-registry.openshift-image-registry.svc:5000/openshift/php@sha256:962d936b00f4953d977be9b85268a289bf2f9d49df4d51b408a7c7835a551103
STEP 2: LABEL "io.openshift.build.source-context-dir"="php-helloworld"       "io.openshift.build.image"="image-registry.openshift-image-registry.svc:5000/openshift/php@sha256:962d936b00f4953d977be9b85268a289bf2f9d49df4d51b408a7c7835a551103"       "io.openshift.build.commit.author"="Jordi Sola <someth2say@gmail.com>"       "io.openshift.build.commit.date"="Fri Oct 4 13:04:03 2019 +0200"       "io.openshift.build.commit.id"="f7cd8963ef353d9173c3a21dcccf402f3616840b"       "io.openshift.build.commit.ref"="s2i"       "io.openshift.build.commit.message"="Initial commit, including all apps previously in course"       "io.openshift.build.source-location"="https://github.com/Faisalmg/DO180-apps"
STEP 3: ENV OPENSHIFT_BUILD_NAME="php-helloworld-1"     OPENSHIFT_BUILD_NAMESPACE="developer-s2i"     OPENSHIFT_BUILD_SOURCE="https://github.com/Faisalmg/DO180-apps"     OPENSHIFT_BUILD_REFERENCE="s2i"     OPENSHIFT_BUILD_COMMIT="f7cd8963ef353d9173c3a21dcccf402f3616840b"
STEP 4: USER root
STEP 5: COPY upload/src /tmp/src
STEP 6: RUN chown -R 1001:0 /tmp/src
STEP 7: USER 1001
STEP 8: RUN /usr/libexec/s2i/assemble
Cloning "https://github.com/Faisalmg/DO180-apps" ...
	Commit:	f7cd8963ef353d9173c3a21dcccf402f3616840b (Initial commit, including all apps previously in course)
	Author:	Jordi Sola <someth2say@gmail.com>
	Date:	Fri Oct 4 13:04:03 2019 +0200
---> Installing application source...
=> sourcing 20-copy-config.sh ...
---> 05:04:48     Processing additional arbitrary httpd configuration provided by s2i ...
=> sourcing 00-documentroot.conf ...
=> sourcing 50-mpm-tuning.conf ...
=> sourcing 40-ssl-certs.sh ...
STEP 9: CMD /usr/libexec/s2i/run
STEP 10: COMMIT temp.builder.openshift.io/developer-s2i/php-helloworld-1:6355931b
time="2021-06-29T05:04:48Z" level=info msg="Image operating system mismatch: image uses \"\", expecting \"linux\""
time="2021-06-29T05:04:48Z" level=info msg="Image architecture mismatch: image uses \"\", expecting \"amd64\""
Getting image source signatures
Copying blob sha256:abc8c32bad762f509f729872b552e8366b9c71a863dc5e9e648dda04a7896e50
Copying blob sha256:b9e30d7689db4040323cb65632888c37d96cbd60d0f05c4dd37e78b9b8a0566a
Copying blob sha256:8b0dba9179a6a0d5de65c6b001c8c9c83eaa169ce526b22a33845ede8f74568c
Copying blob sha256:bda7ec697f579121100fed608753105e2150894241b011af8b12fea98296f8f7
Copying blob sha256:5daa741fd16f3d131c8667e9e7bcbcb0ce95243275070d34686eb6df2c6200fd
Copying blob sha256:eb9fdaebaa1e8ddcebe1034aa88a17a134d8dd93f412ccee10bf1503ebab6c8f
Copying config sha256:c8c92a50a30854cfaa4c09485219416267c72f3e209e5408a29e777103456396
Writing manifest to image destination
Storing signatures
--> c8c92a50a30
c8c92a50a30854cfaa4c09485219416267c72f3e209e5408a29e777103456396

Pushing image image-registry.openshift-image-registry.svc:5000/developer-s2i/php-helloworld:latest ...
Getting image source signatures
Copying blob sha256:eb9fdaebaa1e8ddcebe1034aa88a17a134d8dd93f412ccee10bf1503ebab6c8f
Copying blob sha256:e7021e0589e97471d99c4265b7c8e64da328e48f116b5f260353b2e0a2adb373
Copying blob sha256:9e7a6dc796f0a75c560158a9f9e30fb8b5a90cb53edce9ffbdf5778406e4de39
Copying blob sha256:f659c5c779ac4373302bfe3dc7d713c59cf9ec9f179a71e9b26336a51043fad2
Copying blob sha256:14e4b218199e7985dbeca760da0fa9b969ca5fdaae5095a273cd924afa6898e9
Copying blob sha256:fc5b206e9329a1674dd9e8efbee45c9be28d0d0dcbabba3c6bb67a2f22cfcf2a
Copying config sha256:c8c92a50a30854cfaa4c09485219416267c72f3e209e5408a29e777103456396
Writing manifest to image destination
Storing signatures
Successfully pushed image-registry.openshift-image-registry.svc:5000/developer-s2i/php-helloworld@sha256:b514b4c81f73fd094d62ef4efe8f94a9228a5328eaa04fb7b29942baac0e9f17
Push successful
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ oc describe dc/php-helloworld
Name:		php-helloworld
Namespace:	developer-s2i
Created:	About a minute ago
Labels:		app=php-helloworld
		app.kubernetes.io/component=php-helloworld
		app.kubernetes.io/instance=php-helloworld
Annotations:	openshift.io/generated-by=OpenShiftNewApp
Latest Version:	1
Selector:	deploymentconfig=php-helloworld
Replicas:	1
Triggers:	Config, Image(php-helloworld@latest, auto=true)
Strategy:	Rolling
Template:
Pod Template:
  Labels:	deploymentconfig=php-helloworld
  Annotations:	openshift.io/generated-by: OpenShiftNewApp
  Containers:
   php-helloworld:
    Image:		image-registry.openshift-image-registry.svc:5000/developer-s2i/php-helloworld@sha256:b514b4c81f73fd094d62ef4efe8f94a9228a5328eaa04fb7b29942baac0e9f17
    Ports:		8080/TCP, 8443/TCP
    Host Ports:		0/TCP, 0/TCP
    Environment:	<none>
    Mounts:		<none>
  Volumes:		<none>

Deployment #1 (latest):
	Name:		php-helloworld-1
	Created:	about a minute ago
	Status:		Complete
	Replicas:	1 current / 1 desired
	Selector:	deployment=php-helloworld-1,deploymentconfig=php-helloworld
	Labels:		app.kubernetes.io/component=php-helloworld,app.kubernetes.io/instance=php-helloworld,app=php-helloworld,openshift.io/deployment-config.name=php-helloworld
	Pods Status:	1 Running / 0 Waiting / 0 Succeeded / 0 Failed

Events:
  Type		Reason			Age	From				Message
  ----		------			----	----				-------
  Normal	DeploymentCreated	72s	deploymentconfig-controller	Created new replication controller "php-helloworld-1" for version 1
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ oc expose service php-helloworld --name ${RHT_OCP4_DEV_USER}-helloworld
route.route.openshift.io/developer-helloworld exposed
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ oc get route -o jsonpath='{..spec.host}{"\n"}'
developer-helloworld-developer-s2i.apps.ocp4.example.com
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ curl -s ${RHT_OCP4_DEV_USER}-helloworld-${RHT_OCP4_DEV_USER}-s2i.${RHT_OCP4_WILDCARD_DOMAIN}
Hello, World! php version is 7.3.11
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ 
[student@workstation DO180-apps]$ cd ~/DO180-apps/php-helloworld
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ vim index.php 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ git add .
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ git commit -m 'Changed index page contents.'
[s2i dd69f41] Changed index page contents.
 1 file changed, 1 insertion(+)
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ git push origin s2i
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 2 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 419 bytes | 419.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/Faisalmg/DO180-apps
   f7cd896..dd69f41  s2i -> s2i
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ oc start-build php-helloworld
build.build.openshift.io/php-helloworld-2 started
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ oc logs php-helloworld-2-build -f
Caching blobs under "/var/cache/blobs".
Getting image source signatures
Copying blob sha256:e7021e0589e97471d99c4265b7c8e64da328e48f116b5f260353b2e0a2adb373
Copying blob sha256:9e7a6dc796f0a75c560158a9f9e30fb8b5a90cb53edce9ffbdf5778406e4de39
Copying blob sha256:fc5b206e9329a1674dd9e8efbee45c9be28d0d0dcbabba3c6bb67a2f22cfcf2a
Copying blob sha256:14e4b218199e7985dbeca760da0fa9b969ca5fdaae5095a273cd924afa6898e9
Copying blob sha256:f659c5c779ac4373302bfe3dc7d713c59cf9ec9f179a71e9b26336a51043fad2
Copying config sha256:988e5d4c035d1585f006d0c57a0cfe4bc9f8aae412585f4a6b8fed87da45105f
Writing manifest to image destination
Storing signatures
Generating dockerfile with builder image image-registry.openshift-image-registry.svc:5000/openshift/php@sha256:962d936b00f4953d977be9b85268a289bf2f9d49df4d51b408a7c7835a551103
STEP 1: FROM image-registry.openshift-image-registry.svc:5000/openshift/php@sha256:962d936b00f4953d977be9b85268a289bf2f9d49df4d51b408a7c7835a551103
STEP 2: LABEL "io.openshift.build.commit.id"="dd69f418c1081133de0c2a9dd4b005065004dd19"       "io.openshift.build.commit.ref"="s2i"       "io.openshift.build.commit.message"="Changed index page contents."       "io.openshift.build.source-location"="https://github.com/Faisalmg/DO180-apps"       "io.openshift.build.source-context-dir"="php-helloworld"       "io.openshift.build.image"="image-registry.openshift-image-registry.svc:5000/openshift/php@sha256:962d936b00f4953d977be9b85268a289bf2f9d49df4d51b408a7c7835a551103"       "io.openshift.build.commit.author"="Student User <student@workstation.lab.example.com>"       "io.openshift.build.commit.date"="Tue Jun 29 01:10:53 2021 -0400"
STEP 3: ENV OPENSHIFT_BUILD_NAME="php-helloworld-2"     OPENSHIFT_BUILD_NAMESPACE="developer-s2i"     OPENSHIFT_BUILD_SOURCE="https://github.com/Faisalmg/DO180-apps"     OPENSHIFT_BUILD_REFERENCE="s2i"     OPENSHIFT_BUILD_COMMIT="dd69f418c1081133de0c2a9dd4b005065004dd19"
STEP 4: USER root
STEP 5: COPY upload/src /tmp/src
STEP 6: RUN chown -R 1001:0 /tmp/src
STEP 7: USER 1001
STEP 8: RUN /usr/libexec/s2i/assemble
---> Installing application source...
=> sourcing 20-copy-config.sh ...
---> 05:12:06     Processing additional arbitrary httpd configuration provided by s2i ...
=> sourcing 00-documentroot.conf ...
=> sourcing 50-mpm-tuning.conf ...
=> sourcing 40-ssl-certs.sh ...
STEP 9: CMD /usr/libexec/s2i/run
STEP 10: COMMIT temp.builder.openshift.io/developer-s2i/php-helloworld-2:9639a9e9
time="2021-06-29T05:12:06Z" level=info msg="Image operating system mismatch: image uses \"\", expecting \"linux\""
time="2021-06-29T05:12:06Z" level=info msg="Image architecture mismatch: image uses \"\", expecting \"amd64\""
Getting image source signatures
Copying blob sha256:abc8c32bad762f509f729872b552e8366b9c71a863dc5e9e648dda04a7896e50
Copying blob sha256:b9e30d7689db4040323cb65632888c37d96cbd60d0f05c4dd37e78b9b8a0566a
Copying blob sha256:8b0dba9179a6a0d5de65c6b001c8c9c83eaa169ce526b22a33845ede8f74568c
Copying blob sha256:bda7ec697f579121100fed608753105e2150894241b011af8b12fea98296f8f7
Copying blob sha256:5daa741fd16f3d131c8667e9e7bcbcb0ce95243275070d34686eb6df2c6200fd
Copying blob sha256:2006557668d901e54891d66d7e9ebc2aa1f9f4062ff56e366930c7e3ab669cc8
Copying config sha256:153e937eec8077071853e68c1988da646ea632edffc30181fba812d026890fcf
Writing manifest to image destination
Storing signatures
--> 153e937eec8
153e937eec8077071853e68c1988da646ea632edffc30181fba812d026890fcf
Getting image source signatures

Pushing image image-registry.openshift-image-registry.svc:5000/developer-s2i/php-helloworld:latest ...
Copying blob sha256:e7021e0589e97471d99c4265b7c8e64da328e48f116b5f260353b2e0a2adb373
Copying blob sha256:9e7a6dc796f0a75c560158a9f9e30fb8b5a90cb53edce9ffbdf5778406e4de39
Copying blob sha256:f659c5c779ac4373302bfe3dc7d713c59cf9ec9f179a71e9b26336a51043fad2
Copying blob sha256:14e4b218199e7985dbeca760da0fa9b969ca5fdaae5095a273cd924afa6898e9
Copying blob sha256:fc5b206e9329a1674dd9e8efbee45c9be28d0d0dcbabba3c6bb67a2f22cfcf2a
Copying blob sha256:2006557668d901e54891d66d7e9ebc2aa1f9f4062ff56e366930c7e3ab669cc8
Copying config sha256:153e937eec8077071853e68c1988da646ea632edffc30181fba812d026890fcf
Writing manifest to image destination
Storing signatures
Successfully pushed image-registry.openshift-image-registry.svc:5000/developer-s2i/php-helloworld@sha256:c24d517489b3a826a36cc5497647250f57168abd83fbbc520f9d0e6ae27072f6
Push successful
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ oc get pods
NAME                      READY   STATUS      RESTARTS   AGE
php-helloworld-1-build    0/1     Completed   0          8m13s
php-helloworld-1-deploy   0/1     Completed   0          7m40s
php-helloworld-2-build    0/1     Completed   0          51s
php-helloworld-2-deploy   0/1     Completed   0          21s
php-helloworld-2-h7tqt    1/1     Running     0          17s
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ curl -s ${RHT_OCP4_DEV_USER}-helloworld-${RHT_OCP4_DEV_USER}-s2i.${RHT_OCP4_WILDCARD_DOMAIN}
Hello, World! php version is 7.3.11
A change is a coming!
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ lab openshift-s2i finish

Completing the Guided Excercise: Creating a Containerized Application with Source-to-Image

 · Log in on OpenShift.........................................  SUCCESS
 · Deleting the 'developer-s2i' project........................  SUCCESS
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ oc get template
templateinstances.template.openshift.io  templates.template.openshift.io          
[student@workstation php-helloworld]$ oc get templates -n openshift
NAME                                            DESCRIPTION                                                                        PARAMETERS        OBJECTS
3scale-gateway                                  3scale's APIcast is an NGINX based API gateway used to integrate your interna...   17 (8 blank)      3
amq63-basic                                     Application template for JBoss A-MQ brokers. These can be deployed as standal...   11 (4 blank)      6
amq63-persistent                                An example JBoss A-MQ application. For more information about using this temp...   13 (4 blank)      8
amq63-persistent-ssl                            An example JBoss A-MQ application. For more information about using this temp...   18 (6 blank)      12
amq63-ssl                                       An example JBoss A-MQ application. For more information about using this temp...   16 (6 blank)      10
apicurito                                       Design beautiful, functional APIs with zero coding, using a visual designer f...   7 (1 blank)       7
cache-service                                   Red Hat Data Grid is an in-memory, distributed key/value store.                    8 (1 blank)       4
cakephp-mysql-example                           An example CakePHP application with a MySQL database. For more information ab...   19 (4 blank)      8
cakephp-mysql-persistent                        An example CakePHP application with a MySQL database. For more information ab...   20 (4 blank)      9
dancer-mysql-example                            An example Dancer application with a MySQL database. For more information abo...   16 (5 blank)      8
dancer-mysql-persistent                         An example Dancer application with a MySQL database. For more information abo...   17 (5 blank)      9
datagrid-service                                Red Hat Data Grid is an in-memory, distributed key/value store.                    7 (1 blank)       4
datavirt64-basic-s2i                            Application template for JBoss Data Virtualization 6.4 services built using S2I.   20 (6 blank)      6
datavirt64-extensions-support-s2i               An example JBoss Data Virtualization application. For more information about...    35 (9 blank)      10
datavirt64-ldap-s2i                             Application template for JBoss Data Virtualization 6.4 services that configur...   21 (6 blank)      6
datavirt64-secure-s2i                           An example JBoss Data Virtualization application. For more information about...    51 (22 blank)     8
decisionserver64-amq-s2i                        An example BRMS decision server A-MQ application. For more information about...    30 (5 blank)      10
decisionserver64-basic-s2i                      Application template for Red Hat JBoss BRMS 6.4 decision server applications...    17 (5 blank)      5
django-psql-example                             An example Django application with a PostgreSQL database. For more informatio...   19 (5 blank)      8
django-psql-persistent                          An example Django application with a PostgreSQL database. For more informatio...   20 (5 blank)      9
dotnet-example                                  An example .NET Core application.                                                  19 (9 blank)      5
dotnet-pgsql-persistent                         An example .NET Core application with a PostgreSQL database. For more informa...   24 (7 blank)      9
eap-cd-basic-s2i                                An example JBoss Enterprise Application Platform continuous delivery applicat...   18 (5 blank)      8
eap-cd-starter-s2i                              An example JBoss Enterprise Application Platform continuous delivery applicat...   14 (3 blank)      7
eap72-basic-s2i                                 An example Red Hat JBoss EAP 7 application. For more information about using...    16 (4 blank)      6
eap72-https-s2i                                 An example Red Hat JBoss EAP 7 application configured with secure communicati...   26 (10 blank)     8
eap72-mongodb-persistent-s2i                    An example Red Hat JBoss EAP 7 application with a MongoDB database. For more...    39 (18 blank)     11
eap72-mongodb-s2i                               An example Red Hat JBoss EAP 7 application with a MongoDB database. For more...    38 (18 blank)     10
eap72-mysql-persistent-s2i                      An example Red Hat JBoss EAP 7.2 application with a persistent MySQL database...   40 (19 blank)     11
eap72-mysql-s2i                                 An example Red Hat JBoss EAP 7 application with a MySQL database. For more in...   39 (19 blank)     10
eap72-postgresql-persistent-s2i                 An example Red Hat JBoss EAP 7 application with a persistent PostgreSQL datab...   37 (16 blank)     11
eap72-postgresql-s2i                            An example Red Hat JBoss EAP 7 application with an PostgreSQL database config...   36 (16 blank)     10
eap72-sso-s2i                                   An example Red Hat JBoss EAP 7 application Single Sign-On application. For mo...   44 (19 blank)     8
eap72-third-party-db-s2i                        An example Red Hat JBoss EAP 7 application. For more information about using...    30 (7 blank)      8
fuse75-console                                  The Red Hat Fuse Console eases the discovery and management of Fuse applicati...   8 (1 blank)       5
fuse76-console                                  The Red Hat Fuse Console eases the discovery and management of Fuse applicati...   8 (1 blank)       5
httpd-example                                   An example Apache HTTP Server (httpd) application that serves static content....   9 (3 blank)       5
jenkins-ephemeral                               Jenkins service, without persistent storage....                                    8 (all set)       6
jenkins-ephemeral-monitored                     Jenkins service, without persistent storage....                                    9 (all set)       7
jenkins-persistent                              Jenkins service, with persistent storage....                                       10 (all set)      7
jenkins-persistent-monitored                    Jenkins service, with persistent storage....                                       11 (all set)      8
jws31-tomcat7-basic-s2i                         Application template for JWS applications built using S2I.                         12 (3 blank)      5
jws31-tomcat7-https-s2i                         An example JBoss Web Server application configured for use with https. For mo...   17 (5 blank)      7
jws31-tomcat7-mongodb-persistent-s2i            An example JBoss Web Server application with a MongoDB database. For more inf...   30 (12 blank)     10
jws31-tomcat7-mongodb-s2i                       Application template for JWS MongoDB applications built using S2I.                 29 (12 blank)     9
jws31-tomcat7-mysql-persistent-s2i              An example JBoss Web Server application with a MySQL database. For more infor...   31 (13 blank)     10
jws31-tomcat7-mysql-s2i                         Application template for JWS MySQL applications built using S2I.                   30 (13 blank)     9
jws31-tomcat7-postgresql-persistent-s2i         An example JBoss Web Server application with a PostgreSQL database. For more...    28 (10 blank)     10
jws31-tomcat7-postgresql-s2i                    Application template for JWS PostgreSQL applications built using S2I.              27 (10 blank)     9
jws31-tomcat8-basic-s2i                         An example JBoss Web Server application. For more information about using thi...   12 (3 blank)      5
jws31-tomcat8-https-s2i                         An example JBoss Web Server application. For more information about using thi...   17 (5 blank)      7
jws31-tomcat8-mongodb-persistent-s2i            An example JBoss Web Server application with a MongoDB database. For more inf...   30 (12 blank)     10
jws31-tomcat8-mongodb-s2i                       Application template for JWS MongoDB applications built using S2I.                 29 (12 blank)     9
jws31-tomcat8-mysql-persistent-s2i              An example JBoss Web Server application with a MySQL database. For more infor...   31 (13 blank)     10
jws31-tomcat8-mysql-s2i                         Application template for JWS MySQL applications built using S2I.                   30 (13 blank)     9
jws31-tomcat8-postgresql-persistent-s2i         Application template for JWS PostgreSQL applications with persistent storage...    28 (10 blank)     10
jws50-tomcat9-basic-s2i                         An example JBoss Web Server application. For more information about using thi...   12 (3 blank)      5
jws50-tomcat9-https-s2i                         An example JBoss Web Server application. For more information about using thi...   17 (5 blank)      7
jws50-tomcat9-mongodb-persistent-s2i            An example JBoss Web Server application with a MongoDB database. For more inf...   30 (12 blank)     10
jws50-tomcat9-mongodb-s2i                       Application template for JWS MongoDB applications built using S2I.                 29 (12 blank)     9
jws50-tomcat9-mysql-persistent-s2i              An example JBoss Web Server application with a MySQL database. For more infor...   31 (13 blank)     10
jws50-tomcat9-mysql-s2i                         Application template for JWS MySQL applications built using S2I.                   30 (13 blank)     9
jws50-tomcat9-postgresql-persistent-s2i         Application template for JWS PostgreSQL applications with persistent storage...    28 (10 blank)     10
mariadb-ephemeral                               MariaDB database service, without persistent storage. For more information ab...   8 (3 generated)   3
mariadb-persistent                              MariaDB database service, with persistent storage. For more information about...   9 (3 generated)   4
mongodb-ephemeral                               MongoDB database service, without persistent storage. For more information ab...   8 (3 generated)   3
mongodb-persistent                              MongoDB database service, with persistent storage. For more information about...   9 (3 generated)   4
mysql-ephemeral                                 MySQL database service, without persistent storage. For more information abou...   8 (3 generated)   3
mysql-persistent                                MySQL database service, with persistent storage. For more information about u...   9 (3 generated)   4
nginx-example                                   An example Nginx HTTP server and a reverse proxy (nginx) application that ser...   10 (3 blank)      5
nodejs-mongo-persistent                         An example Node.js application with a MongoDB database. For more information...    19 (4 blank)      9
nodejs-mongodb-example                          An example Node.js application with a MongoDB database. For more information...    18 (4 blank)      8
openjdk-web-basic-s2i                           An example Java application using OpenJDK. For more information about using t...   9 (1 blank)       5
postgresql-ephemeral                            PostgreSQL database service, without persistent storage. For more information...   7 (2 generated)   3
postgresql-persistent                           PostgreSQL database service, with persistent storage. For more information ab...   8 (2 generated)   4
processserver64-amq-mysql-persistent-s2i        An example BPM Suite application with A-MQ and a MySQL database. For more inf...   49 (13 blank)     14
processserver64-amq-mysql-s2i                   An example BPM Suite application with A-MQ and a MySQL database. For more inf...   47 (13 blank)     12
processserver64-amq-postgresql-persistent-s2i   An example BPM Suite application with A-MQ and a PostgreSQL database. For mor...   46 (10 blank)     14
processserver64-amq-postgresql-s2i              An example BPM Suite application with A-MQ and a PostgreSQL database. For mor...   44 (10 blank)     12
processserver64-basic-s2i                       An example BPM Suite application. For more information about using this templ...   17 (5 blank)      5
processserver64-externaldb-s2i                  An example BPM Suite application with a external database. For more informati...   47 (22 blank)     7
processserver64-mysql-persistent-s2i            An example BPM Suite application with a MySQL database. For more information...    40 (14 blank)     10
processserver64-mysql-s2i                       An example BPM Suite application with a MySQL database. For more information...    39 (14 blank)     9
processserver64-postgresql-persistent-s2i       An example BPM Suite application with a PostgreSQL database. For more informa...   37 (11 blank)     10
rails-pgsql-persistent                          An example Rails application with a PostgreSQL database. For more information...   21 (4 blank)      9
rails-postgresql-example                        An example Rails application with a PostgreSQL database. For more information...   20 (4 blank)      8
redis-ephemeral                                 Redis in-memory data structure store, without persistent storage. For more in...   5 (1 generated)   3
redis-persistent                                Redis in-memory data structure store, with persistent storage. For more infor...   6 (1 generated)   4
rhdm77-authoring                                Application template for a non-HA persistent authoring environment, for Red H...   69 (45 blank)     11
rhdm77-authoring-ha                             Application template for a HA persistent authoring environment, for Red Hat D...   85 (46 blank)     18
rhdm77-kieserver                                Application template for a managed KIE Server, for Red Hat Decision Manager 7...   57 (41 blank)     7
rhdm77-prod-immutable-kieserver                 Application template for an immutable KIE server in a production environment,...   62 (44 blank)     9
rhdm77-prod-immutable-kieserver-amq             Application template for an immutable KIE server in a production environment...    76 (53 blank)     21
rhdm77-trial-ephemeral                          Application template for an ephemeral authoring and testing environment, for...    62 (39 blank)     8
rhpam77-authoring                               Application template for a non-HA persistent authoring environment, for Red H...   73 (45 blank)     12
rhpam77-authoring-ha                            Application template for a HA persistent authoring environment, for Red Hat P...   94 (46 blank)     21
rhpam77-kieserver-externaldb                    Application template for a managed KIE Server with an external database, for...    79 (58 blank)     9
rhpam77-kieserver-mysql                         Application template for a managed KIE Server with a MySQL database, for Red...    66 (41 blank)     10
rhpam77-kieserver-postgresql                    Application template for a managed KIE Server with a PostgreSQL database, for...   67 (41 blank)     10
rhpam77-managed                                 Application template for a managed HA production runtime environment, for Red...   80 (45 blank)     16
rhpam77-prod                                    Application template for a managed HA production runtime environment, for Red...   95 (54 blank)     31
rhpam77-prod-immutable-kieserver                Application template for an immutable KIE server in a production environment,...   72 (44 blank)     12
rhpam77-prod-immutable-kieserver-amq            Application template for an immutable KIE server in a production environment...    93 (57 blank)     24
rhpam77-prod-immutable-monitor                  Application template for a router and monitoring console in a production envi...   62 (43 blank)     15
rhpam77-trial-ephemeral                         Application template for an ephemeral authoring and testing environment, for...    62 (39 blank)     8
s2i-fuse75-spring-boot-camel                    Spring Boot and Camel QuickStart. This example demonstrates how you can use A...   16 (2 blank)      3
s2i-fuse75-spring-boot-camel-rest-3scale        Spring Boot, Camel REST DSL and 3Scale QuickStart. This example demonstrates...    17 (2 blank)      5
s2i-fuse75-spring-boot-camel-xml                Spring Boot and Camel Xml QuickStart. This example demonstrates how you can u...   16 (2 blank)      3
s2i-fuse76-spring-boot-camel                    Spring Boot and Camel QuickStart. This example demonstrates how you can use A...   17 (3 blank)      3
s2i-fuse76-spring-boot-camel-rest-3scale        Spring Boot, Camel REST DSL and 3Scale QuickStart. This example demonstrates...    18 (3 blank)      5
s2i-fuse76-spring-boot-camel-xml                Spring Boot and Camel Xml QuickStart. This example demonstrates how you can u...   17 (3 blank)      3
sso72-https                                     An example RH-SSO 7 application. For more information about using this templa...   26 (15 blank)     6
sso72-mysql                                     An example RH-SSO 7 application with a MySQL database. For more information a...   36 (20 blank)     8
sso72-mysql-persistent                          An example RH-SSO 7 application with a MySQL database. For more information a...   37 (20 blank)     9
sso72-postgresql                                An example RH-SSO 7 application with a PostgreSQL database. For more informat...   33 (17 blank)     8
sso72-postgresql-persistent                     An example RH-SSO 7 application with a PostgreSQL database. For more informat...   34 (17 blank)     9
sso73-https                                     An example application based on RH-SSO 7.3 image. For more information about...    27 (16 blank)     6
sso73-mysql                                     An example application based on RH-SSO 7.3 image. For more information about...    37 (21 blank)     8
sso73-mysql-persistent                          An example application based on RH-SSO 7.3 image. For more information about...    38 (21 blank)     9
sso73-ocp4-x509-https                           An example application based on RH-SSO 7.3 image. For more information about...    13 (7 blank)      5
sso73-ocp4-x509-mysql-persistent                An example application based on RH-SSO 7.3 image. For more information about...    24 (12 blank)     8
sso73-ocp4-x509-postgresql-persistent           An example application based on RH-SSO 7.3 image. For more information about...    21 (9 blank)      8
sso73-postgresql                                An example application based on RH-SSO 7.3 image. For more information about...    34 (18 blank)     8
sso73-postgresql-persistent                     An example application based on RH-SSO 7.3 image. For more information about...    35 (18 blank)     9
sso74-https                                     An example application based on RH-SSO 7.4 on OpenJDK image. For more informa...   27 (16 blank)     6
sso74-ocp4-x509-https                           An example application based on RH-SSO 7.4 on OpenJDK image. For more informa...   13 (7 blank)      5
sso74-ocp4-x509-postgresql-persistent           An example application based on RH-SSO 7.4 on OpenJDK image. For more informa...   21 (9 blank)      8
sso74-postgresql                                An example application based on RH-SSO 7.4 on OpenJDK image. For more informa...   34 (18 blank)     8
sso74-postgresql-persistent                     An example application based on RH-SSO 7.4 on OpenJDK image. For more informa...   35 (18 blank)     9
[student@workstation php-helloworld]$ oc get templates -n openshift mysql-persistent 
NAME               DESCRIPTION                                                                        PARAMETERS        OBJECTS
mysql-persistent   MySQL database service, with persistent storage. For more information about u...   9 (3 generated)   4
[student@workstation php-helloworld]$ oc get templates -n openshift mysql-persistent -o yaml
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: mysql-persistent-template
message: |-
  The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

         Username: ${MYSQL_USER}
         Password: ${MYSQL_PASSWORD}
    Database Name: ${MYSQL_DATABASE}
   Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/

  For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/8.0/root/usr/share/container-scripts/mysql/README.md.
metadata:
  annotations:
    description: |-
      MySQL database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/8.0/root/usr/share/container-scripts/mysql/README.md.

      NOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.
    iconClass: icon-mysql-database
    openshift.io/display-name: MySQL
    openshift.io/documentation-url: https://docs.okd.io/latest/using_images/db_images/mysql.html
    openshift.io/long-description: This template provides a standalone MySQL server
      with a database created.  The database is stored on persistent storage.  The
      database name, username, and password are chosen via parameters when provisioning
      this service.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    samples.operator.openshift.io/version: 4.5.4
    tags: database,mysql
  creationTimestamp: "2020-08-05T18:28:58Z"
  labels:
    samples.operator.openshift.io/managed: "true"
  managedFields:
  - apiVersion: template.openshift.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:labels:
        .: {}
        f:template: {}
      f:message: {}
      f:metadata:
        f:annotations:
          .: {}
          f:description: {}
          f:iconClass: {}
          f:openshift.io/display-name: {}
          f:openshift.io/documentation-url: {}
          f:openshift.io/long-description: {}
          f:openshift.io/provider-display-name: {}
          f:openshift.io/support-url: {}
          f:samples.operator.openshift.io/version: {}
          f:tags: {}
        f:labels:
          .: {}
          f:samples.operator.openshift.io/managed: {}
      f:objects: {}
      f:parameters: {}
    manager: cluster-samples-operator
    operation: Update
    time: "2020-08-05T18:28:58Z"
  name: mysql-persistent
  namespace: openshift
  resourceVersion: "12779"
  selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/mysql-persistent
  uid: 6203a07d-cd5f-456b-b4cc-449c71aba830
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    name: ${DATABASE_SERVICE_NAME}
  stringData:
    database-name: ${MYSQL_DATABASE}
    database-password: ${MYSQL_PASSWORD}
    database-root-password: ${MYSQL_ROOT_PASSWORD}
    database-user: ${MYSQL_USER}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: mysql
      port: 3306
    selector:
      name: ${DATABASE_SERVICE_NAME}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${DATABASE_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${DATABASE_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${DATABASE_SERVICE_NAME}
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${DATABASE_SERVICE_NAME}
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: ${DATABASE_SERVICE_NAME}
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${DATABASE_SERVICE_NAME}
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: ${DATABASE_SERVICE_NAME}-data
        volumes:
        - name: ${DATABASE_SERVICE_NAME}-data
          persistentVolumeClaim:
            claimName: ${DATABASE_SERVICE_NAME}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:${MYSQL_VERSION}
          namespace: ${NAMESPACE}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  value: openshift
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mysql
- description: Username for MySQL user that will be used for accessing the database.
  displayName: MySQL Connection Username
  from: user[A-Z0-9]{3}
  generate: expression
  name: MYSQL_USER
  required: true
- description: Password for the MySQL connection user.
  displayName: MySQL Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_PASSWORD
  required: true
- description: Password for the MySQL root user.
  displayName: MySQL root user Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_ROOT_PASSWORD
  required: true
- description: Name of the MySQL database accessed.
  displayName: MySQL Database Name
  name: MYSQL_DATABASE
  required: true
  value: sampledb
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: Version of MySQL image to be used (8.0, or latest).
  displayName: Version of MySQL Image
  name: MYSQL_VERSION
  required: true
  value: "8.0"
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ lab multicontainer-openshift start

Setting up workstation for the Guided Exercise: Creating an Application with a Template

 · Checking podman configuration...............................  SUCCESS

 Verifying the OpenShift cluster is running:
 · Log in on OpenShift.........................................  SUCCESS
 · Check the internal registry is up and running...............  SUCCESS
 · Ensure template project does not exist......................  SUCCESS
 · Initializing local container image storage..................  SUCCESS
 · Downloading starter project.................................  SUCCESS
 · Downloading solution project................................  SUCCESS

Setup successful. Please proceed with the exercise.


[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ 
[student@workstation php-helloworld]$ cd ~/DO180/labs/multicontainer-openshift/images/mysql
[student@workstation mysql]$ 
[student@workstation mysql]$ 
[student@workstation mysql]$ 
[student@workstation mysql]$ sudo podman build -t do180-mysql-57-rhel7 .
STEP 1: FROM rhscl/mysql-57-rhel7
Getting image source signatures
Copying blob f1e961fe4c51 done
Copying blob 1c9f515fc6ab done
Copying blob 9f1840c3b3bd done
Copying blob 1d2c4ce43b78 done
Copying config 60726b33a0 done
Writing manifest to image destination
Storing signatures
STEP 2: ADD root /
STEP 3: COMMIT do180-mysql-57-rhel7
0bb4df6fe91b897202036c45dd4ebd0a7dcfce62881dbf2c68465443489a43ad
[student@workstation mysql]$ 
[student@workstation mysql]$ 
[student@workstation mysql]$ 
[student@workstation mysql]$ 
[student@workstation mysql]$ 
[student@workstation mysql]$ source /usr/local/etc/ocp4.config
[student@workstation mysql]$ 
[student@workstation mysql]$ 
[student@workstation mysql]$ sudo podman login quay.io -u ${RHT_OCP4_QUAY_USER}
Password: 
Login Succeeded!
[student@workstation mysql]$ 
[student@workstation mysql]$ 
[student@workstation mysql]$ 
[student@workstation mysql]$ 
[student@workstation mysql]$ sudo podman tag do180-mysql-57-rhel7 quay.io/${RHT_OCP4_QUAY_USER}/do180-mysql-57-rhel7
[student@workstation mysql]$ 
[student@workstation mysql]$ sudo podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-mysql-57-rhel7
Getting image source signatures
Copying blob 682be05d59b2 done
Copying blob d5796cc2c59c done
Copying blob 21eb863ed592 done
Copying blob 64f2bd9f473b done
Copying blob 2cab4440f907 done
Error: Error copying image to the remote destination: Error writing blob: Error initiating layer upload to /v2/faisalmg/do180-mysql-57-rhel7/blobs/uploads/ in quay.io: unauthorized: access to the requested resource is not authorized
[student@workstation mysql]$ 
[student@workstation mysql]$ cd ~/DO180/labs/multicontainer-openshift
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ cd images/nodejs
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ sudo podman build --layers=false -t do180-nodejs .
STEP 1: FROM ubi7/ubi:7.7
Getting image source signatures
Copying blob fcd63ccfdd0c done
Copying blob 09dbbf8834d2 done
Copying config 0355cd652b done
Writing manifest to image destination
Storing signatures
STEP 2: MAINTAINER username <username@example.com>
STEP 3: ENV     NODEJS_VERSION=8.0         HOME=/opt/app-root/src
STEP 4: RUN     yum install -y --setopt=tsflags=nodocs rh-nodejs8 make &&     	yum clean all -y && 		mkdir -p /opt/app-root &&   		groupadd -r appuser -f -g 1001 &&   		useradd -u 1001 -r -g appuser -m -d ${HOME} -s /sbin/nologin             -c "Application User" appuser &&   		chown -R appuser:appuser /opt/app-root && 	chmod -R 755 /opt/app-root
Loaded plugins: ovl, product-id, search-disabled-repos, subscription-manager
This system is not receiving updates. You can use subscription-manager on the host to register and assign subscriptions.
ubi-7                                                    | 3.8 kB     00:00     
ubi-7-rhah                                               | 3.7 kB     00:00     
ubi-7-server-devtools-rpms                               | 3.8 kB     00:00     
ubi-7-server-extras-rpms                                 | 3.7 kB     00:00     
ubi-7-server-optional-rpms                               | 3.8 kB     00:00     
ubi-server-rhscl-7-rpms                                  | 3.8 kB     00:00     
(1/18): ubi-7/x86_64/updateinfo                            |   92 B   00:00     
(2/18): ubi-7/x86_64/primary_db                            | 800 kB   00:00     
(3/18): ubi-7/x86_64/group                                 |  124 B   00:00     
(4/18): ubi-7-rhah/x86_64/updateinfo                       |   92 B   00:00     
(5/18): ubi-7-rhah/x86_64/primary_db                       | 2.5 kB   00:00     
(6/18): ubi-7-rhah/x86_64/group                            |  124 B   00:00     
(7/18): ubi-7-server-devtools-rpms/x86_64/group            |  124 B   00:00     
(8/18): ubi-7-server-devtools-rpms/x86_64/updateinfo       |   92 B   00:00     
(9/18): ubi-7-server-devtools-rpms/x86_64/primary_db       | 8.6 kB   00:00     
(10/18): ubi-7-server-extras-rpms/x86_64/group             |  124 B   00:00     
(11/18): ubi-7-server-extras-rpms/x86_64/primary_db        | 6.8 kB   00:00     
(12/18): ubi-7-server-extras-rpms/x86_64/updateinfo        |   92 B   00:00     
(13/18): ubi-7-server-optional-rpms/x86_64/group           |  124 B   00:00     
(14/18): ubi-7-server-optional-rpms/x86_64/primary_db      |  14 kB   00:00     
(15/18): ubi-7-server-optional-rpms/x86_64/updateinfo      |   92 B   00:00     
(16/18): ubi-server-rhscl-7-rpms/x86_64/updateinfo         |   92 B   00:00     
(17/18): ubi-server-rhscl-7-rpms/x86_64/primary_db         | 396 kB   00:00     
(18/18): ubi-server-rhscl-7-rpms/x86_64/group              |  124 B   00:00     
Resolving Dependencies
--> Running transaction check
---> Package make.x86_64 1:3.82-24.el7 will be installed
---> Package rh-nodejs8.x86_64 0:3.0-5.el7 will be installed
--> Processing Dependency: rh-nodejs8-nodejs for package: rh-nodejs8-3.0-5.el7.x86_64
--> Processing Dependency: rh-nodejs8-npm for package: rh-nodejs8-3.0-5.el7.x86_64
--> Processing Dependency: rh-nodejs8-runtime for package: rh-nodejs8-3.0-5.el7.x86_64
--> Running transaction check
---> Package rh-nodejs8-nodejs.x86_64 0:8.17.0-2.el7 will be installed
---> Package rh-nodejs8-npm.x86_64 0:6.13.4-8.17.0.2.el7 will be installed
---> Package rh-nodejs8-runtime.x86_64 0:3.0-5.el7 will be installed
--> Processing Dependency: /usr/bin/scl_source for package: rh-nodejs8-runtime-3.0-5.el7.x86_64
--> Running transaction check
---> Package scl-utils.x86_64 0:20130529-19.el7 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package            Arch   Version                Repository               Size
================================================================================
Installing:
 make               x86_64 1:3.82-24.el7          ubi-7                   421 k
 rh-nodejs8         x86_64 3.0-5.el7              ubi-server-rhscl-7-rpms 7.3 k
Installing for dependencies:
 rh-nodejs8-nodejs  x86_64 8.17.0-2.el7           ubi-server-rhscl-7-rpms 7.3 M
 rh-nodejs8-npm     x86_64 6.13.4-8.17.0.2.el7    ubi-server-rhscl-7-rpms 4.8 M
 rh-nodejs8-runtime x86_64 3.0-5.el7              ubi-server-rhscl-7-rpms 1.1 M
 scl-utils          x86_64 20130529-19.el7        ubi-7                    24 k

Transaction Summary
================================================================================
Install  2 Packages (+4 Dependent packages)

Total download size: 14 M
Installed size: 48 M
Downloading packages:
warning: /var/cache/yum/x86_64/7Server/ubi-server-rhscl-7-rpms/packages/rh-nodejs8-3.0-5.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY
Public key for rh-nodejs8-3.0-5.el7.x86_64.rpm is not installed
(1/6): rh-nodejs8-3.0-5.el7.x86_64.rpm                     | 7.3 kB   00:00     
Public key for make-3.82-24.el7.x86_64.rpm is not installed
(2/6): make-3.82-24.el7.x86_64.rpm                         | 421 kB   00:00     
(3/6): rh-nodejs8-npm-6.13.4-8.17.0.2.el7.x86_64.rpm       | 4.8 MB   00:00     
(4/6): rh-nodejs8-runtime-3.0-5.el7.x86_64.rpm             | 1.1 MB   00:00     
(5/6): rh-nodejs8-nodejs-8.17.0-2.el7.x86_64.rpm           | 7.3 MB   00:00     
(6/6): scl-utils-20130529-19.el7.x86_64.rpm                |  24 kB   00:00     
--------------------------------------------------------------------------------
Total                                               17 MB/s |  14 MB  00:00     
Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
Importing GPG key 0xFD431D51:
 Userid     : "Red Hat, Inc. (release key 2) <security@redhat.com>"
 Fingerprint: 567e 347a d004 4ade 55ba 8a5f 199e 2f91 fd43 1d51
 Package    : redhat-release-server-7.7-10.el7.x86_64 (@anaconda/7.7)
 From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
Importing GPG key 0x2FA658E0:
 Userid     : "Red Hat, Inc. (auxiliary key) <security@redhat.com>"
 Fingerprint: 43a6 e49c 4a38 f4be 9abf 2a53 4568 9c88 2fa6 58e0
 Package    : redhat-release-server-7.7-10.el7.x86_64 (@anaconda/7.7)
 From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : scl-utils-20130529-19.el7.x86_64                             1/6 
  Installing : rh-nodejs8-runtime-3.0-5.el7.x86_64                          2/6 
  Installing : rh-nodejs8-npm-6.13.4-8.17.0.2.el7.x86_64                    3/6 
  Installing : rh-nodejs8-nodejs-8.17.0-2.el7.x86_64                        4/6 
  Installing : rh-nodejs8-3.0-5.el7.x86_64                                  5/6 
  Installing : 1:make-3.82-24.el7.x86_64                                    6/6 
  Verifying  : scl-utils-20130529-19.el7.x86_64                             1/6 
  Verifying  : rh-nodejs8-3.0-5.el7.x86_64                                  2/6 
  Verifying  : rh-nodejs8-npm-6.13.4-8.17.0.2.el7.x86_64                    3/6 
  Verifying  : rh-nodejs8-nodejs-8.17.0-2.el7.x86_64                        4/6 
  Verifying  : rh-nodejs8-runtime-3.0-5.el7.x86_64                          5/6 
  Verifying  : 1:make-3.82-24.el7.x86_64                                    6/6 

Installed:
  make.x86_64 1:3.82-24.el7            rh-nodejs8.x86_64 0:3.0-5.el7           

Dependency Installed:
  rh-nodejs8-nodejs.x86_64 0:8.17.0-2.el7                                       
  rh-nodejs8-npm.x86_64 0:6.13.4-8.17.0.2.el7                                   
  rh-nodejs8-runtime.x86_64 0:3.0-5.el7                                         
  scl-utils.x86_64 0:20130529-19.el7                                            

Complete!
Loaded plugins: ovl, product-id, search-disabled-repos, subscription-manager
This system is not receiving updates. You can use subscription-manager on the host to register and assign subscriptions.
Cleaning repos: ubi-7 ubi-7-rhah ubi-7-server-devtools-rpms
              : ubi-7-server-extras-rpms ubi-7-server-optional-rpms
              : ubi-server-rhscl-7-rpms
STEP 5: ADD	./enable-rh-nodejs8.sh /etc/profile.d/
STEP 6: USER	appuser
STEP 7: WORKDIR	${HOME}
STEP 8: CMD	["echo", "You must create your own container from this one."]
STEP 9: COMMIT do180-nodejs
Getting image source signatures
Copying blob 5601485f0109 skipped: already exists
Copying blob ac7577b8c383 skipped: already exists
Copying blob 7e116d609f40 done
Copying config 00a8df8267 done
Writing manifest to image destination
Storing signatures
00a8df826701ed5d8384a31f85a44e76f0269ba911212421d304261836220cb6
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ cd ~/DO180/labs/multicontainer-openshift
[student@workstation multicontainer-openshift]$ cd deploy/nodejs
[student@workstation nodejs]$ ./build.sh 
Preparing build folder
STEP 1: FROM do180-nodejs
STEP 2: ARG NEXUS_BASE_URL
STEP 3: MAINTAINER username <username@example.com>
STEP 4: COPY run.sh build ${HOME}/
STEP 5: RUN scl enable rh-nodejs8 'npm install --registry=http://$NEXUS_BASE_URL/repository/nodejs/'
npm WARN deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.

> dtrace-provider@0.8.8 install /opt/app-root/src/node_modules/dtrace-provider
> node-gyp rebuild || node suppress-error.js

make: Entering directory `/opt/app-root/src/node_modules/dtrace-provider/build'
  TOUCH Release/obj.target/DTraceProviderStub.stamp
make: Leaving directory `/opt/app-root/src/node_modules/dtrace-provider/build'
npm notice created a lockfile as package-lock.json. You should commit this file.
added 144 packages from 260 contributors in 38.493s

7 packages are looking for funding
  run `npm fund` for details

STEP 6: EXPOSE	30080
STEP 7: CMD	["scl","enable","rh-nodejs8","./run.sh"]
STEP 8: COMMIT do180/todonodejs
Getting image source signatures
Copying blob 5601485f0109 skipped: already exists
Copying blob ac7577b8c383 skipped: already exists
Copying blob 8c13e7d2cd68 skipped: already exists
Copying blob 0634916640c5 done
Copying config 81deaf65df done
Writing manifest to image destination
Storing signatures
81deaf65df2ec384d6934418c3a3574722a64d106e108f16687ca1aec95fd81f
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ sudo podman tag do180/todonodejs quay.io/${RHT_OCP4_QUAY_USER}/do180-todonodejs
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ sudo podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-todonodejs
Getting image source signatures
Copying blob ac7577b8c383 done
Copying blob ad2dd8b87dc3 done
Copying blob 5601485f0109 done
Copying blob 8c13e7d2cd68 done
Copying config 81deaf65df done
Writing manifest to image destination
Copying config 81deaf65df done
Writing manifest to image destination
Storing signatures
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ 
[student@workstation nodejs]$ oc new-project ${RHT_OCP4_DEV_USER}-template
Now using project "developer-template" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app ruby~https://github.com/sclorg/ruby-ex.git

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

[student@workstation nodejs]$ cd /home/student/DO180/labs/multicontainer-openshift
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ oc process -f todo-template.json -p RHT_OCP4_QUAY_USER=${RHT_OCP4_QUAY_USER} | oc create -f -
pod/mysql created
pod/todoapi created
service/todoapi created
service/mysql created
persistentvolumeclaim/dbinit created
persistentvolumeclaim/dbclaim created
[student@workstation multicontainer-openshift]$ oc get pods -w
NAME      READY   STATUS         RESTARTS   AGE
mysql     0/1     ErrImagePull   0          43s
todoapi   0/1     ErrImagePull   0          43s
todoapi   0/1     ImagePullBackOff   0          46s
mysql     0/1     ImagePullBackOff   0          52s
todoapi   0/1     ErrImagePull       0          62s
mysql     0/1     ErrImagePull       0          69s
todoapi   0/1     ImagePullBackOff   0          74s
mysql     0/1     ImagePullBackOff   0          80s
todoapi   0/1     ErrImagePull       0          116s
mysql     0/1     ErrImagePull       0          2m3s
todoapi   0/1     ImagePullBackOff   0          2m7s
mysql     0/1     ImagePullBackOff   0          2m16s
[student@workstation multicontainer-openshift]$ oc expose service todoapi
route.route.openshift.io/todoapi exposed
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ oc status | grep -o "http:.*com"
http://todoapi-developer-template.apps.ocp4.example.com
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ curl -w "\n" $(oc status | grep -o "http:.*com")/todo/api/items/1
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">

  <style type="text/css">
  /*!
   * Bootstrap v3.3.5 (http://getbootstrap.com)
   * Copyright 2011-2015 Twitter, Inc.
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
   */
  /*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
  html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
  }
  body {
    margin: 0;
  }
  h1 {
    font-size: 1.7em;
    font-weight: 400;
    line-height: 1.3;
    margin: 0.68em 0;
  }
  * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  *:before,
  *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  html {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }
  body {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    line-height: 1.66666667;
    font-size: 13px;
    color: #333333;
    background-color: #ffffff;
    margin: 2em 1em;
  }
  p {
    margin: 0 0 10px;
    font-size: 13px;
  }
  .alert.alert-info {
    padding: 15px;
    margin-bottom: 20px;
    border: 1px solid transparent;
    background-color: #f5f5f5;
    border-color: #8b8d8f;
    color: #363636;
    margin-top: 30px;
  }
  .alert p {
    padding-left: 35px;
  }
  a {
    color: #0088ce;
  }

  ul {
    position: relative;
    padding-left: 51px;
  }
  p.info {
    position: relative;
    font-size: 15px;
    margin-bottom: 10px;
  }
  p.info:before, p.info:after {
    content: "";
    position: absolute;
    top: 9%;
    left: 0;
  }
  p.info:before {
    content: "i";
    left: 3px;
    width: 20px;
    height: 20px;
    font-family: serif;
    font-size: 15px;
    font-weight: bold;
    line-height: 21px;
    text-align: center;
    color: #fff;
    background: #4d5258;
    border-radius: 16px;
  }

  @media (min-width: 768px) {
    body {
      margin: 4em 3em;
    }
    h1 {
      font-size: 2.15em;}
  }

  </style>
  </head>
  <body>
    <div>
      <h1>Application is not available</h1>
      <p>The application is currently not serving requests at this endpoint. It may not have been started or is still starting.</p>

      <div class="alert alert-info">
        <p class="info">
          Possible reasons you are seeing this page:
        </p>
        <ul>
          <li>
            <strong>The host doesn't exist.</strong>
            Make sure the hostname was typed correctly and that a route matching this hostname exists.
          </li>
          <li>
            <strong>The host exists, but doesn't have a matching path.</strong>
            Check if the URL path was typed correctly and that the route was created using the desired path.
          </li>
          <li>
            <strong>Route and path matches, but all pods are down.</strong>
            Make sure that the resources exposed by this route (pods, services, deployment configs, etc) have at least one pod running.
          </li>
        </ul>
      </div>
    </div>
  </body>
</html>

[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ oc status | grep -o "http:.*com"
http://todoapi-developer-template.apps.ocp4.example.com
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ curl -w "\n" $(oc status | grep -o "http:.*com")/todo/api/items/1
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">

  <style type="text/css">
  /*!
   * Bootstrap v3.3.5 (http://getbootstrap.com)
   * Copyright 2011-2015 Twitter, Inc.
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
   */
  /*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
  html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
  }
  body {
    margin: 0;
  }
  h1 {
    font-size: 1.7em;
    font-weight: 400;
    line-height: 1.3;
    margin: 0.68em 0;
  }
  * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  *:before,
  *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  html {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }
  body {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    line-height: 1.66666667;
    font-size: 13px;
    color: #333333;
    background-color: #ffffff;
    margin: 2em 1em;
  }
  p {
    margin: 0 0 10px;
    font-size: 13px;
  }
  .alert.alert-info {
    padding: 15px;
    margin-bottom: 20px;
    border: 1px solid transparent;
    background-color: #f5f5f5;
    border-color: #8b8d8f;
    color: #363636;
    margin-top: 30px;
  }
  .alert p {
    padding-left: 35px;
  }
  a {
    color: #0088ce;
  }

  ul {
    position: relative;
    padding-left: 51px;
  }
  p.info {
    position: relative;
    font-size: 15px;
    margin-bottom: 10px;
  }
  p.info:before, p.info:after {
    content: "";
    position: absolute;
    top: 9%;
    left: 0;
  }
  p.info:before {
    content: "i";
    left: 3px;
    width: 20px;
    height: 20px;
    font-family: serif;
    font-size: 15px;
    font-weight: bold;
    line-height: 21px;
    text-align: center;
    color: #fff;
    background: #4d5258;
    border-radius: 16px;
  }

  @media (min-width: 768px) {
    body {
      margin: 4em 3em;
    }
    h1 {
      font-size: 2.15em;}
  }

  </style>
  </head>
  <body>
    <div>
      <h1>Application is not available</h1>
      <p>The application is currently not serving requests at this endpoint. It may not have been started or is still starting.</p>

      <div class="alert alert-info">
        <p class="info">
          Possible reasons you are seeing this page:
        </p>
        <ul>
          <li>
            <strong>The host doesn't exist.</strong>
            Make sure the hostname was typed correctly and that a route matching this hostname exists.
          </li>
          <li>
            <strong>The host exists, but doesn't have a matching path.</strong>
            Check if the URL path was typed correctly and that the route was created using the desired path.
          </li>
          <li>
            <strong>Route and path matches, but all pods are down.</strong>
            Make sure that the resources exposed by this route (pods, services, deployment configs, etc) have at least one pod running.
          </li>
        </ul>
      </div>
    </div>
  </body>
</html>

[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ oc get pods -w
NAME      READY   STATUS             RESTARTS   AGE
mysql     0/1     ImagePullBackOff   0          10m
todoapi   0/1     ImagePullBackOff   0          10m
mysql     0/1     ErrImagePull       0          11m
mysql     0/1     ImagePullBackOff   0          11m
todoapi   0/1     ErrImagePull       0          11m
todoapi   0/1     ImagePullBackOff   0          11m
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ oc expose service todoapi
Error from server (AlreadyExists): routes.route.openshift.io "todoapi" already exists
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ oc status | grep -o "http:.*com"
http://todoapi-developer-template.apps.ocp4.example.com
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ curl -w "\n" $(oc status | grep -o "http:.*com")/todo/api/items/1
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">

  <style type="text/css">
  /*!
   * Bootstrap v3.3.5 (http://getbootstrap.com)
   * Copyright 2011-2015 Twitter, Inc.
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
   */
  /*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
  html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
  }
  body {
    margin: 0;
  }
  h1 {
    font-size: 1.7em;
    font-weight: 400;
    line-height: 1.3;
    margin: 0.68em 0;
  }
  * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  *:before,
  *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  html {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }
  body {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    line-height: 1.66666667;
    font-size: 13px;
    color: #333333;
    background-color: #ffffff;
    margin: 2em 1em;
  }
  p {
    margin: 0 0 10px;
    font-size: 13px;
  }
  .alert.alert-info {
    padding: 15px;
    margin-bottom: 20px;
    border: 1px solid transparent;
    background-color: #f5f5f5;
    border-color: #8b8d8f;
    color: #363636;
    margin-top: 30px;
  }
  .alert p {
    padding-left: 35px;
  }
  a {
    color: #0088ce;
  }

  ul {
    position: relative;
    padding-left: 51px;
  }
  p.info {
    position: relative;
    font-size: 15px;
    margin-bottom: 10px;
  }
  p.info:before, p.info:after {
    content: "";
    position: absolute;
    top: 9%;
    left: 0;
  }
  p.info:before {
    content: "i";
    left: 3px;
    width: 20px;
    height: 20px;
    font-family: serif;
    font-size: 15px;
    font-weight: bold;
    line-height: 21px;
    text-align: center;
    color: #fff;
    background: #4d5258;
    border-radius: 16px;
  }

  @media (min-width: 768px) {
    body {
      margin: 4em 3em;
    }
    h1 {
      font-size: 2.15em;}
  }

  </style>
  </head>
  <body>
    <div>
      <h1>Application is not available</h1>
      <p>The application is currently not serving requests at this endpoint. It may not have been started or is still starting.</p>

      <div class="alert alert-info">
        <p class="info">
          Possible reasons you are seeing this page:
        </p>
        <ul>
          <li>
            <strong>The host doesn't exist.</strong>
            Make sure the hostname was typed correctly and that a route matching this hostname exists.
          </li>
          <li>
            <strong>The host exists, but doesn't have a matching path.</strong>
            Check if the URL path was typed correctly and that the route was created using the desired path.
          </li>
          <li>
            <strong>Route and path matches, but all pods are down.</strong>
            Make sure that the resources exposed by this route (pods, services, deployment configs, etc) have at least one pod running.
          </li>
        </ul>
      </div>
    </div>
  </body>
</html>

[student@workstation multicontainer-openshift]$ oc status | grep -o "http:.*com"
http://todoapi-developer-template.apps.ocp4.example.com
[student@workstation multicontainer-openshift]$ curl -w "\n" $(oc status | grep -o "http:.*com")/todo/api/items/1
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">

  <style type="text/css">
  /*!
   * Bootstrap v3.3.5 (http://getbootstrap.com)
   * Copyright 2011-2015 Twitter, Inc.
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
   */
  /*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
  html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
  }
  body {
    margin: 0;
  }
  h1 {
    font-size: 1.7em;
    font-weight: 400;
    line-height: 1.3;
    margin: 0.68em 0;
  }
  * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  *:before,
  *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  html {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }
  body {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    line-height: 1.66666667;
    font-size: 13px;
    color: #333333;
    background-color: #ffffff;
    margin: 2em 1em;
  }
  p {
    margin: 0 0 10px;
    font-size: 13px;
  }
  .alert.alert-info {
    padding: 15px;
    margin-bottom: 20px;
    border: 1px solid transparent;
    background-color: #f5f5f5;
    border-color: #8b8d8f;
    color: #363636;
    margin-top: 30px;
  }
  .alert p {
    padding-left: 35px;
  }
  a {
    color: #0088ce;
  }

  ul {
    position: relative;
    padding-left: 51px;
  }
  p.info {
    position: relative;
    font-size: 15px;
    margin-bottom: 10px;
  }
  p.info:before, p.info:after {
    content: "";
    position: absolute;
    top: 9%;
    left: 0;
  }
  p.info:before {
    content: "i";
    left: 3px;
    width: 20px;
    height: 20px;
    font-family: serif;
    font-size: 15px;
    font-weight: bold;
    line-height: 21px;
    text-align: center;
    color: #fff;
    background: #4d5258;
    border-radius: 16px;
  }

  @media (min-width: 768px) {
    body {
      margin: 4em 3em;
    }
    h1 {
      font-size: 2.15em;}
  }

  </style>
  </head>
  <body>
    <div>
      <h1>Application is not available</h1>
      <p>The application is currently not serving requests at this endpoint. It may not have been started or is still starting.</p>

      <div class="alert alert-info">
        <p class="info">
          Possible reasons you are seeing this page:
        </p>
        <ul>
          <li>
            <strong>The host doesn't exist.</strong>
            Make sure the hostname was typed correctly and that a route matching this hostname exists.
          </li>
          <li>
            <strong>The host exists, but doesn't have a matching path.</strong>
            Check if the URL path was typed correctly and that the route was created using the desired path.
          </li>
          <li>
            <strong>Route and path matches, but all pods are down.</strong>
            Make sure that the resources exposed by this route (pods, services, deployment configs, etc) have at least one pod running.
          </li>
        </ul>
      </div>
    </div>
  </body>
</html>

[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ oc status | grep -o "http:.*com"
http://todoapi-developer-template.apps.ocp4.example.com
[student@workstation multicontainer-openshift]$ curl -w "\n" $(oc status | grep -o "http:.*com")/todo/api/items/1
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">

  <style type="text/css">
  /*!
   * Bootstrap v3.3.5 (http://getbootstrap.com)
   * Copyright 2011-2015 Twitter, Inc.
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
   */
  /*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
  html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
  }
  body {
    margin: 0;
  }
  h1 {
    font-size: 1.7em;
    font-weight: 400;
    line-height: 1.3;
    margin: 0.68em 0;
  }
  * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  *:before,
  *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  html {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }
  body {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    line-height: 1.66666667;
    font-size: 13px;
    color: #333333;
    background-color: #ffffff;
    margin: 2em 1em;
  }
  p {
    margin: 0 0 10px;
    font-size: 13px;
  }
  .alert.alert-info {
    padding: 15px;
    margin-bottom: 20px;
    border: 1px solid transparent;
    background-color: #f5f5f5;
    border-color: #8b8d8f;
    color: #363636;
    margin-top: 30px;
  }
  .alert p {
    padding-left: 35px;
  }
  a {
    color: #0088ce;
  }

  ul {
    position: relative;
    padding-left: 51px;
  }
  p.info {
    position: relative;
    font-size: 15px;
    margin-bottom: 10px;
  }
  p.info:before, p.info:after {
    content: "";
    position: absolute;
    top: 9%;
    left: 0;
  }
  p.info:before {
    content: "i";
    left: 3px;
    width: 20px;
    height: 20px;
    font-family: serif;
    font-size: 15px;
    font-weight: bold;
    line-height: 21px;
    text-align: center;
    color: #fff;
    background: #4d5258;
    border-radius: 16px;
  }

  @media (min-width: 768px) {
    body {
      margin: 4em 3em;
    }
    h1 {
      font-size: 2.15em;}
  }

  </style>
  </head>
  <body>
    <div>
      <h1>Application is not available</h1>
      <p>The application is currently not serving requests at this endpoint. It may not have been started or is still starting.</p>

      <div class="alert alert-info">
        <p class="info">
          Possible reasons you are seeing this page:
        </p>
        <ul>
          <li>
            <strong>The host doesn't exist.</strong>
            Make sure the hostname was typed correctly and that a route matching this hostname exists.
          </li>
          <li>
            <strong>The host exists, but doesn't have a matching path.</strong>
            Check if the URL path was typed correctly and that the route was created using the desired path.
          </li>
          <li>
            <strong>Route and path matches, but all pods are down.</strong>
            Make sure that the resources exposed by this route (pods, services, deployment configs, etc) have at least one pod running.
          </li>
        </ul>
      </div>
    </div>
  </body>
</html>

[student@workstation multicontainer-openshift]$ oc status | grep -o "http:.*com"
http://todoapi-developer-template.apps.ocp4.example.com
[student@workstation multicontainer-openshift]$ oc expose service todoapi
Error from server (AlreadyExists): routes.route.openshift.io "todoapi" already exists
[student@workstation multicontainer-openshift]$ oc get pods -w
NAME      READY   STATUS             RESTARTS   AGE
mysql     0/1     ImagePullBackOff   0          72m
todoapi   0/1     ImagePullBackOff   0          72m
^C[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ oc process -f todo-template.json -p RHT_OCP4_QUAY_USER=${RHT_OCP4_QUAY_USER} | oc create -f -
Error from server (AlreadyExists): pods "mysql" already exists
Error from server (AlreadyExists): pods "todoapi" already exists
Error from server (AlreadyExists): services "todoapi" already exists
Error from server (AlreadyExists): services "mysql" already exists
Error from server (AlreadyExists): persistentvolumeclaims "dbinit" already exists
Error from server (AlreadyExists): persistentvolumeclaims "dbclaim" already exists
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ oc get pods -w
NAME      READY   STATUS             RESTARTS   AGE
mysql     0/1     ImagePullBackOff   0          73m
todoapi   0/1     ErrImagePull       0          73m
todoapi   0/1     ImagePullBackOff   0          73m
[student@workstation multicontainer-openshift]$ history | grep finish
    7  lab manage-networking finish
   84  lab manage-lifecycle finish
   95  lab manage-storage finish 
  122  lab image-operations finish
  131  lab dockerfile-create finish
  148  lab openshift-resources finish
  164  lab openshift-routes finish
  192  lab openshift-s2i finish
  234  history | grep finish
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ history | grep start
   28  lab container-create start
   45  sudo podman restart F8
   46  sudo podman restart f8
   77  lab manage-lifecycle start
   96  lab manage-networking start
  123  lab dockerfile-create start
  133  lab openshift-resources start
  149  lab openshift-routes start
  167  lab openshift-s2i start
  188  oc start-build php-helloworld
  196  lab multicontainer-openshift start
  235  history | grep start
[student@workstation multicontainer-openshift]$ oc get pods -w
NAME      READY   STATUS             RESTARTS   AGE
mysql     0/1     ImagePullBackOff   0          88m
todoapi   1/1     Running            0          88m
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ lab multicontainer-openshift finish

Completing the Guided Exercise: Creating an Application with a Template

 · Log in on OpenShift.........................................  SUCCESS
 · Removing developer-template project.........................  SUCCESS
 · Removing rhscl/mysql-57-rhel7 image.........................  SUCCESS
 · Removing do180/mysql-57-rhel7 image.........................  SUCCESS
 · Removing quay.io/faisalmg/do180-mysql-57-rhel7 image........  SUCCESS
 · Removing localhost/do180-nodejs image.......................  SUCCESS
 · Removing do180/todonodejs image.............................  SUCCESS
 · Removing quay.io/faisalmg/do180-todonodejs image............  SUCCESS
 · Removing registry.access.redhat.com/ubi7/ubi:7.7 image......  SUCCESS
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ 
[student@workstation multicontainer-openshift]$ cd ~
[student@workstation ~]$ lab execute-troubleshoot start

Checking prerequisites for Guided Exercise: Troubleshooting OpenShift Clusters and Applications

 Preparing the student's workstation:
 · Download exercise files.....................................  SUCCESS
 Verify the OpenShift cluster is running:
 · Router pods are available...................................  SUCCESS
 · OAuth pods are available....................................  SUCCESS
 · API pods are available......................................  SUCCESS
 · Control plane node 'master01' is ready......................  SUCCESS
 · Control plane node 'master02' is ready......................  SUCCESS
 · Control plane node 'master03' is ready......................  SUCCESS
 Checking for conflicts with existing OpenShift projects:
 · The 'execute-troubleshoot' project is absent................  SUCCESS

Setting up the classroom for Guided Exercise: Troubleshooting OpenShift Clusters and Applications

 Restoring authentication settings to installation defaults:
 · Removing 'cluster-admin' role from the 'admin' user.........  SUCCESS
 · Remove HTPasswd secret: 'localusers'........................  SUCCESS
 · Remove all configured Identity Providers....................  SUCCESS
 · Remove all existing users...................................  SUCCESS
 · Remove all existing identities..............................  SUCCESS
 Preparing the exercise:
 · Create project 'execute-troubleshoot'.......................  SUCCESS
 · Deploy PostgreSQL in 'execute-troubleshoot'.................  SUCCESS

Overall start status...........................................  SUCCESS

[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ source /usr/local/etc/ocp4.config
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc login -u kubeadmin -p ${RHT_OCP4_KUBEADM_PASSWD} https://api.ocp4.example.com:6443
Login successful.

You have access to 60 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project "default".
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc projects
You have access to the following projects and can switch between them with 'oc project <projectname>':

    common - Nexus Operator Project
  * default
    execute-troubleshoot
    kube-node-lease
    kube-public
    kube-system
    nfs-client-provisioner - NFS Provisioner
    openshift
    openshift-apiserver
    openshift-apiserver-operator
    openshift-authentication
    openshift-authentication-operator
    openshift-cloud-credential-operator
    openshift-cluster-machine-approver
    openshift-cluster-node-tuning-operator
    openshift-cluster-samples-operator
    openshift-cluster-storage-operator
    openshift-cluster-version
    openshift-config
    openshift-config-managed
    openshift-config-operator
    openshift-console
    openshift-console-operator
    openshift-controller-manager
    openshift-controller-manager-operator
    openshift-dns
    openshift-dns-operator
    openshift-etcd
    openshift-etcd-operator
    openshift-image-registry
    openshift-infra
    openshift-ingress
    openshift-ingress-operator
    openshift-insights
    openshift-kni-infra
    openshift-kube-apiserver
    openshift-kube-apiserver-operator
    openshift-kube-controller-manager
    openshift-kube-controller-manager-operator
    openshift-kube-scheduler
    openshift-kube-scheduler-operator
    openshift-kube-storage-version-migrator
    openshift-kube-storage-version-migrator-operator
    openshift-machine-api
    openshift-machine-config-operator
    openshift-marketplace
    openshift-monitoring
    openshift-multus
    openshift-network-operator
    openshift-node
    openshift-openstack-infra
    openshift-operator-lifecycle-manager
    openshift-operators
    openshift-ovirt-infra
    openshift-sdn
    openshift-service-ca
    openshift-service-ca-operator
    openshift-service-catalog-removed
    openshift-user-workload-monitoring
    openshift-vsphere-infra

Using project "default" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc get nodes
NAME       STATUS   ROLES           AGE    VERSION
master01   Ready    master,worker   327d   v1.18.3+012b3ec
master02   Ready    master,worker   327d   v1.18.3+012b3ec
master03   Ready    master,worker   327d   v1.18.3+012b3ec
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc adm top node
NAME       CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   
master01   904m         25%    5860Mi          39%       
master02   1905m        54%    5231Mi          35%       
master03   1671m        47%    3251Mi          21%       
[student@workstation ~]$ oc adm top node
NAME       CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   
master01   904m         25%    5860Mi          39%       
master02   1905m        54%    5231Mi          35%       
master03   1671m        47%    3251Mi          21%       
[student@workstation ~]$ oc adm top node
NAME       CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   
master01   904m         25%    5860Mi          39%       
master02   1905m        54%    5231Mi          35%       
master03   1671m        47%    3251Mi          21%       
[student@workstation ~]$ oc adm top node
NAME       CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   
master01   1197m        34%    5859Mi          39%       
master02   1905m        54%    5231Mi          35%       
master03   1643m        46%    3266Mi          21%       
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc describe node master01
Name:               master01
Roles:              master,worker
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=master01
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/master=
                    node-role.kubernetes.io/worker=
                    node.openshift.io/os_id=rhcos
Annotations:        machineconfiguration.openshift.io/currentConfig: rendered-master-fed85da431df25bc160fbd596a91c1db
                    machineconfiguration.openshift.io/desiredConfig: rendered-master-fed85da431df25bc160fbd596a91c1db
                    machineconfiguration.openshift.io/reason: 
                    machineconfiguration.openshift.io/state: Done
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 05 Aug 2020 14:23:06 -0400
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  master01
  AcquireTime:     <unset>
  RenewTime:       Tue, 29 Jun 2021 06:41:33 -0400
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Tue, 29 Jun 2021 06:36:50 -0400   Wed, 05 Aug 2020 14:42:05 -0400   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Tue, 29 Jun 2021 06:36:50 -0400   Wed, 05 Aug 2020 14:42:05 -0400   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Tue, 29 Jun 2021 06:36:50 -0400   Wed, 05 Aug 2020 14:42:05 -0400   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Tue, 29 Jun 2021 06:36:50 -0400   Wed, 05 Aug 2020 14:42:05 -0400   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.50.10
  Hostname:    master01
Capacity:
  cpu:                4
  ephemeral-storage:  41391084Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             16419132Ki
  pods:               250
Allocatable:
  cpu:                3500m
  ephemeral-storage:  37072281128
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             15268156Ki
  pods:               250
System Info:
  Machine ID:                             8647fbfd86c5432aa6c9da08d596d4cc
  System UUID:                            c27fa789-dabb-4043-9419-c208a47ace79
  Boot ID:                                e3e360c4-0f62-4f28-89fa-76db9e9ade56
  Kernel Version:                         4.18.0-193.13.2.el8_2.x86_64
  OS Image:                               Red Hat Enterprise Linux CoreOS 45.82.202007240629-0 (Ootpa)
  Operating System:                       linux
  Architecture:                           amd64
  Container Runtime Version:              cri-o://1.18.3-5.rhaos4.5.git1c13d1d.el8
  Kubelet Version:                        v1.18.3+012b3ec
  Kube-Proxy Version:                     v1.18.3+012b3ec
PodCIDR:                                  10.8.1.0/24
PodCIDRs:                                 10.8.1.0/24
Non-terminated Pods:                      (42 in total)
  Namespace                               Name                                                 CPU Requests  CPU Limits  Memory Requests  Memory Limits  AGE
  ---------                               ----                                                 ------------  ----------  ---------------  -------------  ---
  common                                  nexus-6697df94d9-7wrx5                               500m (14%)    1 (28%)     4Gi (27%)        6Gi (41%)      2d6h
  common                                  nexus-operator-85dc49d566-jvtv9                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2d6h
  openshift-apiserver-operator            openshift-apiserver-operator-76887d86f6-ddhp5        10m (0%)      0 (0%)      50Mi (0%)        0 (0%)         2d6h
  openshift-apiserver                     apiserver-59b6b7968c-rqm2z                           100m (2%)     0 (0%)      200Mi (1%)       0 (0%)         2d6h
  openshift-authentication                oauth-openshift-6c76799fd7-s55cf                     10m (0%)      0 (0%)      50Mi (0%)        0 (0%)         11m
  openshift-cloud-credential-operator     cloud-credential-operator-5bf8fb79db-d42qx           10m (0%)      0 (0%)      150Mi (1%)       0 (0%)         2d6h
  openshift-cluster-machine-approver      machine-approver-85bcb94899-s296h                    20m (0%)      0 (0%)      70Mi (0%)        0 (0%)         2d6h
  openshift-cluster-node-tuning-operator  tuned-qjbhv                                          10m (0%)      0 (0%)      50Mi (0%)        0 (0%)         327d
  openshift-cluster-samples-operator      cluster-samples-operator-665dfb69bf-plpjf            20m (0%)      0 (0%)      0 (0%)           0 (0%)         2d6h
  openshift-cluster-storage-operator      csi-snapshot-controller-operator-6f9d5b4bfc-gckxz    10m (0%)      0 (0%)      50Mi (0%)        0 (0%)         2d6h
  openshift-console                       console-5df4fcbb47-b74zd                             10m (0%)      0 (0%)      100Mi (0%)       0 (0%)         2d6h
  openshift-console                       downloads-5565cdb86b-zqsgv                           10m (0%)      0 (0%)      50Mi (0%)        0 (0%)         2d6h
  openshift-controller-manager            controller-manager-7lstz                             100m (2%)     0 (0%)      100Mi (0%)       0 (0%)         2d6h
  openshift-dns-operator                  dns-operator-746bbc44b5-8fncv                        20m (0%)      0 (0%)      40Mi (0%)        0 (0%)         2d6h
  openshift-dns                           dns-default-tfhlc                                    65m (1%)      0 (0%)      110Mi (0%)       512Mi (3%)     327d
  openshift-etcd                          etcd-master01                                        460m (13%)    0 (0%)      920Mi (6%)       0 (0%)         327d
  openshift-image-registry                node-ca-qrrpd                                        10m (0%)      0 (0%)      10Mi (0%)        0 (0%)         327d
  openshift-ingress-operator              ingress-operator-59944c47b9-db49d                    20m (0%)      0 (0%)      40Mi (0%)        0 (0%)         2d6h
  openshift-ingress                       router-default-57575dc57c-rgjth                      100m (2%)     0 (0%)      256Mi (1%)       0 (0%)         2d6h
  openshift-kube-apiserver                kube-apiserver-master01                              330m (9%)     0 (0%)      1174Mi (7%)      0 (0%)         2d6h
  openshift-kube-controller-manager       kube-controller-manager-master01                     100m (2%)     0 (0%)      500Mi (3%)       0 (0%)         327d
  openshift-kube-scheduler                openshift-kube-scheduler-master01                    20m (0%)      0 (0%)      100Mi (0%)       0 (0%)         327d
  openshift-machine-api                   cluster-autoscaler-operator-d5698d448-574j5          30m (0%)      0 (0%)      70Mi (0%)        0 (0%)         2d6h
  openshift-machine-config-operator       etcd-quorum-guard-5fc4989788-dx5xv                   10m (0%)      0 (0%)      5Mi (0%)         0 (0%)         2d6h
  openshift-machine-config-operator       machine-config-daemon-l4ftv                          40m (1%)      0 (0%)      100Mi (0%)       0 (0%)         327d
  openshift-machine-config-operator       machine-config-server-cn4cx                          20m (0%)      0 (0%)      50Mi (0%)        0 (0%)         327d
  openshift-monitoring                    alertmanager-main-1                                  8m (0%)       0 (0%)      260Mi (1%)       0 (0%)         2d6h
  openshift-monitoring                    alertmanager-main-2                                  8m (0%)       0 (0%)      260Mi (1%)       0 (0%)         2d6h
  openshift-monitoring                    grafana-68bbfbdf97-2ptjn                             5m (0%)       0 (0%)      120Mi (0%)       0 (0%)         2d6h
  openshift-monitoring                    node-exporter-7z66r                                  9m (0%)       0 (0%)      210Mi (1%)       0 (0%)         327d
  openshift-monitoring                    prometheus-adapter-d6b949545-qrblf                   1m (0%)       0 (0%)      25Mi (0%)        0 (0%)         2d6h
  openshift-monitoring                    prometheus-k8s-1                                     76m (2%)      0 (0%)      1184Mi (7%)      0 (0%)         2d6h
  openshift-monitoring                    thanos-querier-6c89f5cff9-7pvgw                      8m (0%)       0 (0%)      72Mi (0%)        0 (0%)         2d6h
  openshift-multus                        multus-admission-controller-plrpp                    20m (0%)      0 (0%)      20Mi (0%)        0 (0%)         327d
  openshift-multus                        multus-xpkf5                                         10m (0%)      0 (0%)      150Mi (1%)       0 (0%)         327d
  openshift-network-operator              network-operator-6bd8b9b698-2s762                    10m (0%)      0 (0%)      50Mi (0%)        0 (0%)         2d6h
  openshift-operator-lifecycle-manager    packageserver-7869dcd484-fp4t4                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         7h39m
  openshift-sdn                           ovs-7bzt6                                            100m (2%)     0 (0%)      400Mi (2%)       0 (0%)         327d
  openshift-sdn                           sdn-controller-czjdg                                 10m (0%)      0 (0%)      50Mi (0%)        0 (0%)         327d
  openshift-sdn                           sdn-xgl8z                                            100m (2%)     0 (0%)      200Mi (1%)       0 (0%)         327d
  openshift-service-ca-operator           service-ca-operator-5f596775f8-fnlqn                 10m (0%)      0 (0%)      80Mi (0%)        0 (0%)         2d6h
  openshift-service-ca                    service-ca-8b8db557b-fpzcc                           10m (0%)      0 (0%)      120Mi (0%)       0 (0%)         2d6h
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests       Limits
  --------           --------       ------
  cpu                2420m (69%)    1 (28%)
  memory             11542Mi (77%)  6656Mi (44%)
  ephemeral-storage  0 (0%)         0 (0%)
  hugepages-1Gi      0 (0%)         0 (0%)
  hugepages-2Mi      0 (0%)         0 (0%)
Events:              <none>
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc get pod -n openshift-image-registry
NAME                                               READY   STATUS    RESTARTS   AGE
cluster-image-registry-operator-5f47f6fcf7-94k7s   2/2     Running   0          2d6h
image-registry-64b69c4bf9-2dmbr                    1/1     Running   0          2d6h
node-ca-24k9d                                      1/1     Running   0          327d
node-ca-lfh4z                                      1/1     Running   0          327d
node-ca-qrrpd                                      1/1     Running   0          327d
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc logs --tail 3 -n openshift-image-registry cluster-image-registry-operator-5f47f6fcf7-94k7s
error: a container name must be specified for pod cluster-image-registry-operator-5f47f6fcf7-94k7s, choose one of: [cluster-image-registry-operator cluster-image-registry-operator-watch]
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc logs --tail 3 -n image-registry-64b69c4bf9-2dmbr cluster-image-registry-operator-5f47f6fcf7-94k7s
Error from server (NotFound): namespaces "image-registry-64b69c4bf9-2dmbr" not found
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc logs --tail 3 -n openshift-image-registry cluster-image-registry-operator-5f47f6fcf7-94k7s
error: a container name must be specified for pod cluster-image-registry-operator-5f47f6fcf7-94k7s, choose one of: [cluster-image-registry-operator cluster-image-registry-operator-watch]
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc logs --tail 3 -n openshift-image-registry -c cluster-image-registry-operator cluster-image-registry-operator-5f47f6fcf7-94k7s
I0629 10:49:53.462816      14 clusteroperator.go:99] event from workqueue successfully processed
I0629 10:49:54.510098      14 clusteroperator.go:99] event from workqueue successfully processed
I0629 10:49:55.501377      14 clusteroperator.go:99] event from workqueue successfully processed
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc logs --tail 1 -n openshift-image-registry image-registry-64b69c4bf9-2dmbr
time="2021-06-29T10:52:36.433507075Z" level=info msg=response go.version=go1.13.4 http.request.host="10.8.0.16:5000" http.request.id=39f17265-fda9-4fac-993a-cbe428951801 http.request.method=GET http.request.remoteaddr="10.8.0.1:55730" http.request.uri=/healthz http.request.useragent=kube-probe/1.18+ http.response.duration="48.947µs" http.response.status=200 http.response.written=0
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc adm node-logs --tail 1 -u kubelet master01
-- Logs begin at Mon 2021-06-28 03:29:19 UTC, end at Tue 2021-06-29 10:53:18 UTC. --
Jun 28 15:24:22.346584 master01 systemd[1]: kubelet.service: Consumed 1h 26min 52.192s CPU time
-- Logs begin at Mon 2021-06-28 03:29:19 UTC, end at Tue 2021-06-29 10:53:19 UTC. --
Jun 29 10:53:19.104117 master01 hyperkube[1492]: I0629 10:53:19.104038    1492 prober.go:133] Readiness probe for "etcd-master01_openshift-etcd(f8707b5de822b90462d111776ea53eba):etcd" succeeded
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc debug node/master01
Starting pod/master01-debug ...
To use host binaries, run `chroot /host`
Pod IP: 192.168.50.10
If you don't see a command prompt, try pressing enter.
sh-4.2# 
sh-4.2# 
sh-4.2# chroot /ho
home/ host/ 
sh-4.2# chroot /ho
home/ host/ 
sh-4.2# chroot /host 
sh-4.4# 
sh-4.4# 
sh-4.4# 
sh-4.4# systemctl status kubelet
● kubelet.service - MCO environment configuration
   Loaded: loaded (/etc/systemd/system/kubelet.service; enabled; vendor preset: enabled)
  Drop-In: /etc/systemd/system/kubelet.service.d
           └─10-mco-default-env.conf
   Active: active (running) since Tue 2021-06-29 03:00:32 UTC; 7h ago
  Process: 1490 ExecStartPre=/bin/rm -f /var/lib/kubelet/cpu_manager_state (code=exited, status=0/SUCCESS)
  Process: 1487 ExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests (code=exited, status=0/SUCCESS)
 Main PID: 1492 (kubelet)
    Tasks: 28 (limit: 102120)
   Memory: 814.5M
      CPU: 57min 9.004s
   CGroup: /system.slice/kubelet.service
           └─1492 kubelet --config=/etc/kubernetes/kubelet.conf --bootstrap-kubeconfig=/etc/kubernetes/kubeconfig --kubeconfig=/var/lib/kubelet/kubeconfig --container-runtime=remote --c>

Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.254124    1492 status_manager.go:435] Ignoring same status for pod "prometheus-adapter-d6b949545-qrblf_openshift-monitoring(7bf7>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.254569    1492 volume_manager.go:372] Waiting for volumes to attach and mount for pod "prometheus-adapter-d6b949545-qrblf_opensh>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.254877    1492 volume_manager.go:403] All volumes are attached and mounted for pod "prometheus-adapter-d6b949545-qrblf_openshift>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.255414    1492 kuberuntime_manager.go:650] computePodActions got {KillPod:false CreateSandbox:false SandboxID:2e4819893cf7fa2a77>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.324586    1492 desired_state_of_world_populator.go:344] Added volume "tmpfs" (volSpec="tmpfs") for pod "7bf72a09-02e3-4995-b7cf->
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.324932    1492 desired_state_of_world_populator.go:344] Added volume "config" (volSpec="config") for pod "7bf72a09-02e3-4995-b7c>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.325107    1492 desired_state_of_world_populator.go:344] Added volume "prometheus-adapter-prometheus-config" (volSpec="prometheus>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.325252    1492 desired_state_of_world_populator.go:344] Added volume "serving-certs-ca-bundle" (volSpec="serving-certs-ca-bundle>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.325402    1492 desired_state_of_world_populator.go:344] Added volume "tls" (volSpec="tls") for pod "7bf72a09-02e3-4995-b7cf-fb29>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.325520    1492 desired_state_of_world_populator.go:344] Added volume "prometheus-adapter-token-fb5pv" (volSpec="prometheus-adapt>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389156    1492 reconciler.go:254] Starting operationExecutor.MountVolume for volume "serving-certs-ca-bundle" (UniqueName: "kube>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389450    1492 reconciler.go:254] Starting operationExecutor.MountVolume for volume "config" (UniqueName: "kubernetes.io/configm>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389570    1492 configmap.go:188] Setting up volume serving-certs-ca-bundle for pod 7bf72a09-02e3-4995-b7cf-fb2989ef0480 at /var/>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389656    1492 configmap.go:212] Received configMap openshift-monitoring/serving-certs-ca-bundle containing (1) pieces of data, >
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389698    1492 reconciler.go:254] Starting operationExecutor.MountVolume for volume "tls" (UniqueName: "kubernetes.io/secret/7bf>
  Drop-In: /etc/systemd/system/kubelet.service.d
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389766    1492 reconciler.go:254] Starting operationExecutor.MountVolume for volume "prometheus-adapter-token-fb5pv" (UniqueName● kubelet.service - MCO environment configuration
   Loaded: loaded (/etc/systemd/system/kubelet.service; enabled; vendor preset: enabled)
  Drop-In: /etc/systemd/system/kubelet.service.d
>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389800    1492 atomic_writer.go:157] pod openshift-monitoring/prometheus-adapter-d6b949545-qrblf volume serving-certs-ca-bundle:>
Jun 29 10:55:59 master01 hyperkube[1492]: W0629 10:55:59.389810    1492 volume_linux.go:49] Setting volume ownership for /var/lib/kubelet/pods/7bf72a09-02e3-4995-b7cf-fb2989ef0480/volum>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389814    1492 secret.go:183] Setting up volume tls for pod 7bf72a09-02e3-4995-b7cf-fb2989ef0480 at /var/lib/kubelet/pods/7bf72a>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389849    1492 secret.go:207] Received secret openshift-monitoring/prometheus-adapter-3irnu1ck3d9l6 containing (4) pieces of dat>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389889    1492 operation_generator.go:657] MountVolume.SetUp succeeded for volume "serving-certs-ca-bundle" (UniqueName: "kubern>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389896    1492 configmap.go:188] Setting up volume config for pod 7bf72a09-02e3-4995-b7cf-fb2989ef0480 at /var/lib/kubelet/pods/>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.389954    1492 configmap.go:212] Received configMap openshift-monitoring/adapter-config containing (1) pieces of data, 1161 tota>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390018    1492 reconciler.go:254] Starting operationExecutor.MountVolume for volume "prometheus-adapter-prometheus-config" (Uniq>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390055    1492 atomic_writer.go:157] pod openshift-monitoring/prometheus-adapter-d6b949545-qrblf volume tls: no update required >
Jun 29 10:55:59 master01 hyperkube[1492]: W0629 10:55:59.390064    1492 volume_linux.go:49] Setting volume ownership for /var/lib/kubelet/pods/7bf72a09-02e3-4995-b7cf-fb2989ef0480/volum>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390066    1492 atomic_writer.go:157] pod openshift-monitoring/prometheus-adapter-d6b949545-qrblf volume config: no update requir>
Jun 29 10:55:59 master01 hyperkube[1492]: W0629 10:55:59.390077    1492 volume_linux.go:49] Setting volume ownership for /var/lib/kubelet/pods/7bf72a09-02e3-4995-b7cf-fb2989ef0480/volum>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390137    1492 configmap.go:188] Setting up volume prometheus-adapter-prometheus-config for pod 7bf72a09-02e3-4995-b7cf-fb2989ef>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390158    1492 operation_generator.go:657] MountVolume.SetUp succeeded for volume "config" (UniqueName: "kubernetes.io/configmap>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390171    1492 operation_generator.go:657] MountVolume.SetUp succeeded for volume "tls" (UniqueName: "kubernetes.io/secret/7bf72>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390171    1492 configmap.go:212] Received configMap openshift-monitoring/prometheus-adapter-prometheus-config containing (1) pie>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390207    1492 secret.go:183] Setting up volume prometheus-adapter-token-fb5pv for pod 7bf72a09-02e3-4995-b7cf-fb2989ef0480 at />
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390237    1492 secret.go:207] Received secret openshift-monitoring/prometheus-adapter-token-fb5pv containing (4) pieces of data,>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390282    1492 atomic_writer.go:157] pod openshift-monitoring/prometheus-adapter-d6b949545-qrblf volume prometheus-adapter-prome>
Jun 29 10:55:59 master01 hyperkube[1492]: W0629 10:55:59.390293    1492 volume_linux.go:49] Setting volume ownership for /var/lib/kubelet/pods/7bf72a09-02e3-4995-b7cf-fb2989ef0480/volum>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390376    1492 operation_generator.go:657] MountVolume.SetUp succeeded for volume "prometheus-adapter-prometheus-config" (Unique>
Jun 29 10:55:59 master01 hyperkube[1492]: I0629 10:55:59.390453    1492 atomic_writer.go:157] pod openshift-monitoring/prometheus-adapter-d6b949545-qrblf volume prometheus-adapter-token>
Jun 29 10:55:59 master01 hyperkube[1492]: W0629 10:55:59.390465    1492 volume_linux.go:49] Setting volume ownership for /var/lib/kubelet/pods/7bf72a09-02e3-4995-b7cf-fb2989ef0480/volum>
sh-4.4# systemctl status cri-o
● crio.service - MCO environment configuration
   Loaded: loaded (/usr/lib/systemd/system/crio.service; disabled; vendor preset: disabled)
  Drop-In: /etc/systemd/system/crio.service.d
           └─10-mco-default-env.conf
   Active: active (running) since Tue 2021-06-29 03:00:25 UTC; 7h ago
     Docs: https://github.com/cri-o/cri-o
 Main PID: 1443 (crio)
    Tasks: 31
   Memory: 375.5M
      CPU: 46min 47.139s
   CGroup: /system.slice/crio.service
           └─1443 /usr/bin/crio --enable-metrics=true --metrics-port=9537

Jun 29 10:54:28 master01 crio[1443]: time="2021-06-29 10:54:28.371379707Z" level=info msg="Pulling image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a60f5a4429d512c7bc8e438ba>
Jun 29 10:54:39 master01 crio[1443]: time="2021-06-29 10:54:39.412737091Z" level=info msg="Pulled image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a60f5a4429d512c7bc8e438ba9>
Jun 29 10:54:39 master01 crio[1443]: time="2021-06-29 10:54:39.414963397Z" level=info msg="Checking image status: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a60f5a4429d512c7b>
Jun 29 10:54:39 master01 crio[1443]: time="2021-06-29 10:54:39.419330846Z" level=info msg="Image status: &ImageStatusResponse{Image:&Image{Id:f1e1af15f03c0510aac6058d269e20b7c033616c8fd>
Jun 29 10:54:39 master01 crio[1443]: time="2021-06-29 10:54:39.421567061Z" level=info msg="Creating container: default/master01-debug/container-00" id=5503b4b7-920c-49c8-b4c9-6999520d4d>
Jun 29 10:54:39 master01 crio[1443]: time="2021-06-29 10:54:39.647482209Z" level=info msg="Created container 662dbecf975d9af407d4db1aa45bf0d2edc2f1ccf501b81aabf2f9f59717db46: default/ma>
Jun 29 10:54:39 master01 crio[1443]: time="2021-06-29 10:54:39.648467741Z" level=info msg="Starting container: 662dbecf975d9af407d4db1aa45bf0d2edc2f1ccf501b81aabf2f9f59717db46" id=367e5>
Jun 29 10:54:39 master01 crio[1443]: time="2021-06-29 10:54:39.664546153Z" level=info msg="Started container 662dbecf975d9af407d4db1aa45bf0d2edc2f1ccf501b81aabf2f9f59717db46: default/ma>
Jun 29 10:55:33 master01 crio[1443]: time="2021-06-29 10:55:33.087179960Z" level=info msg="Checking image status: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eb9ab6f21487d70c0>
Jun 29 10:55:33 master01 crio[1443]: time="2021-06-29 10:55:33.088837495Z" level=info msg="Image status: &ImageStatusResponse{Image:&Image{Id:e66662827187986d2c58eba25a6300d4c7926c2042b>
lines 1-23/23 (END)
Removing debug pod ...
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc debug node/master01
Starting pod/master01-debug ...
To use host binaries, run `chroot /host`
Pod IP: 192.168.50.10
If you don't see a command prompt, try pressing enter.
sh-4.2# 
sh-4.2# 
sh-4.2# chroot /host
sh-4.4# 
sh-4.4# 
sh-4.4# crictl ps --name openvswitch
CONTAINER           IMAGE                                                              CREATED             STATE               NAME                ATTEMPT             POD ID
9f0c2215d08a5       81ac7e4df0c960f19146662f538bcc2b72709040390ef6f94bfa880f5c0ebc3a   8 hours ago         Running             openvswitch         0                   b4045ca18a9be
sh-4.4# 
sh-4.4# 
sh-4.4# 
sh-4.4# exit
exit
sh-4.2# exit
exit

Removing debug pod ...
[student@workstation ~]$ oc project execute-troubleshoot 
Now using project "execute-troubleshoot" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ oc get pod
NAME                    READY   STATUS             RESTARTS   AGE
psql-69676884f8-bhkdv   0/1     ImagePullBackOff   0          30m
[student@workstation ~]$ oc status
In project execute-troubleshoot on server https://api.ocp4.example.com:6443

svc/psql - 172.30.141.227:5432

deployment/psql deploys registry.access.redhat.com/rhscl/postgresq-96-rhel7:1
  deployment #1 running for 30 minutes - 0/1 pods

View details with 'oc describe <resource>/<name>' or list everything with 'oc get all'.
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc get events
LAST SEEN   TYPE      REASON              OBJECT                       MESSAGE
30m         Normal    Scheduled           pod/psql-69676884f8-bhkdv    Successfully assigned execute-troubleshoot/psql-69676884f8-bhkdv to master03
30m         Normal    AddedInterface      pod/psql-69676884f8-bhkdv    Add eth0 [10.9.0.22/23]
29m         Normal    Pulling             pod/psql-69676884f8-bhkdv    Pulling image "registry.access.redhat.com/rhscl/postgresq-96-rhel7:1"
29m         Warning   Failed              pod/psql-69676884f8-bhkdv    Failed to pull image "registry.access.redhat.com/rhscl/postgresq-96-rhel7:1": rpc error: code = Unknown desc = Error reading manifest 1 in registry.access.redhat.com/rhscl/postgresq-96-rhel7: name unknown: Repo not found
29m         Warning   Failed              pod/psql-69676884f8-bhkdv    Error: ErrImagePull
28s         Normal    BackOff             pod/psql-69676884f8-bhkdv    Back-off pulling image "registry.access.redhat.com/rhscl/postgresq-96-rhel7:1"
5m29s       Warning   Failed              pod/psql-69676884f8-bhkdv    Error: ImagePullBackOff
30m         Normal    SuccessfulCreate    replicaset/psql-69676884f8   Created pod: psql-69676884f8-bhkdv
30m         Normal    ScalingReplicaSet   deployment/psql              Scaled up replica set psql-69676884f8 to 1
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ skopeo inspect docker://registry.access.redhat.com/rhscl/postgresq-96-rhel7:1
FATA[0000] Error parsing image name "docker://registry.access.redhat.com/rhscl/postgresq-96-rhel7:1": Error reading manifest 1 in registry.access.redhat.com/rhscl/postgresq-96-rhel7: name unknown: Repo not found 
[student@workstation ~]$ skopeo inspect docker://registry.access.redhat.com/rhscl/postgresql-96-rhel7:1
{
    "Name": "registry.access.redhat.com/rhscl/postgresql-96-rhel7",
    "Digest": "sha256:6c3090779c0553d773380ff4cb0532086075376964de398417d494313f9a933b",
    "RepoTags": [
        "1-42.1561731092",
        "1-59",
        "1-58",
        "1-17",
        "1-10",
        "1-13",
        "1-12",
        "1-51",
        "1-53",
        "1-52",
        "1-57",
        "1-38",
        "1-37",
        "1-36",
        "1-32",
        "1",
        "1-25.1535384678",
        "1-8",
        "1-5",
        "1-4",
        "1-7",
        "1-6",
        "1-61",
        "1-63",
        "1-48",
        "1-49",
        "1-46",
        "1-47",
        "1-44",
        "1-45",
        "1-42",
        "1-40",
        "1-51.1575996559",
        "1-28",
        "1-14",
        "1-25",
        "1-27",
        "latest"
    ],
    "Created": "2020-09-21T15:39:59.766636Z",
    "DockerVersion": "1.13.1",
    "Labels": {
        "architecture": "x86_64",
        "build-date": "2020-09-21T15:38:28.666467",
        "com.redhat.build-host": "cpt-1002.osbs.prod.upshift.rdu2.redhat.com",
        "com.redhat.component": "rh-postgresql96-container",
        "com.redhat.license_terms": "https://www.redhat.com/en/about/red-hat-end-user-license-agreements#rhel",
        "description": "PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
        "distribution-scope": "public",
        "io.k8s.description": "PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
        "io.k8s.display-name": "PostgreSQL 9.6",
        "io.openshift.expose-services": "5432:postgresql",
        "io.openshift.s2i.assemble-user": "26",
        "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
        "io.openshift.tags": "database,postgresql,postgresql96,rh-postgresql96",
        "io.s2i.scripts-url": "image:///usr/libexec/s2i",
        "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
        "name": "rhscl/postgresql-96-rhel7",
        "release": "63",
        "summary": "PostgreSQL is an advanced Object-Relational database management system",
        "url": "https://access.redhat.com/containers/#/registry.access.redhat.com/rhscl/postgresql-96-rhel7/images/1-63",
        "usage": "podman run -d --name postgresql_database -e POSTGRESQL_USER=user -e POSTGRESQL_PASSWORD=pass -e POSTGRESQL_DATABASE=db -p 5432:5432 rhscl/postgresql-96-rhel7",
        "vcs-ref": "ae9489bc8bf8f1c543d15dbe9ed5b9d1b6adcacd",
        "vcs-type": "git",
        "vendor": "Red Hat, Inc.",
        "version": "1"
    },
    "Architecture": "amd64",
    "Os": "linux",
    "Layers": [
        "sha256:1323a241cc068f2816dd88f00168be73339471d6dc6eb2e6c761b63b734501b6",
        "sha256:2bd25ca124579d6fce8668ff5d4ed83866d7e7438cb561a51ddde8cc40272822",
        "sha256:5d011ac93e7456d4c646b0fbb53712598bda9a6b0d027b2be788016e078ded77",
        "sha256:16634824fe3f2f2bbbf87f9a3082ec4b3d1b3b084ce14b3e63419a4dc5b3150d"
    ],
    "Env": [
        "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
        "container=oci",
        "SUMMARY=PostgreSQL is an advanced Object-Relational database management system",
        "DESCRIPTION=PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
        "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
        "STI_SCRIPTS_PATH=/usr/libexec/s2i",
        "APP_ROOT=/opt/app-root",
        "HOME=/var/lib/pgsql",
        "PLATFORM=el7",
        "BASH_ENV=/usr/share/container-scripts/postgresql/scl_enable",
        "ENV=/usr/share/container-scripts/postgresql/scl_enable",
        "PROMPT_COMMAND=. /usr/share/container-scripts/postgresql/scl_enable",
        "POSTGRESQL_VERSION=9.6",
        "POSTGRESQL_PREV_VERSION=9.5",
        "PGUSER=postgres",
        "APP_DATA=/opt/app-root",
        "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/postgresql",
        "ENABLED_COLLECTIONS=rh-postgresql96"
    ]
}
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc edit deployment/psql
deployment.apps/psql edited
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc status 
In project execute-troubleshoot on server https://api.ocp4.example.com:6443

svc/psql - 172.30.141.227:5432

deployment/psql deploys registry.access.redhat.com/rhscl/postgresql-96-rhel7:1
  deployment #2 running for 15 seconds - 0/1 pods
  deployment #1 deployed 35 minutes ago - 0/1 pods

View details with 'oc describe <resource>/<name>' or list everything with 'oc get all'.
[student@workstation ~]$ oc get pods
NAME                   READY   STATUS    RESTARTS   AGE
psql-7b586df5d-k54xd   1/1     Running   0          27s
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ lab execute-troubleshoot finish

Completing Guided Exercise: Troubleshooting OpenShift Clusters and Applications

 · Delete OpenShift project 'execute-troubleshoot'.............  SUCCESS
 · Wait for project 'execute-troubleshoot' to be gone..........  SUCCESS
 · Remove exercise files.......................................  SUCCESS

Please use start if you wish to do the exercise again.

[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ lab install-storage start

Checking prerequisites for Guided Exercise: Introducing OpenShift Dynamic Storage

 Verify the OpenShift cluster is running:
 · Router pods are available...................................  SUCCESS
 · OAuth pods are available....................................  SUCCESS
 · API pods are available......................................  SUCCESS
 · Control plane node 'master01' is ready......................  SUCCESS
 · Control plane node 'master02' is ready......................  SUCCESS
 · Control plane node 'master03' is ready......................  SUCCESS
 Checking for conflicts with existing OpenShift projects:
 · The 'install-storage' project is absent.....................  SUCCESS

Setting up the classroom for Guided Exercise: Introducing OpenShift Dynamic Storage

 · Download exercise files.....................................  SUCCESS
 · Persistent volume claim 'postgresql-storage' is not present.  SUCCESS
 · Application 'postgres-persistent' is not present............  SUCCESS
 · Application 'postgres-persistent2' is not present...........  SUCCESS

Overall start status...........................................  SUCCESS

[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ source /usr/local/etc/ocp4.config
[student@workstation ~]$ 
[student@workstation ~]$ vim /usr/local/etc/ocp4.config
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc login -u kubeadmin -p ${RHT_OCP4_KUBEADM_PASSWD} https://api.ocp4.example.com:6443
Login successful.

You have access to 59 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project "default".
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc new-project install-storage
Now using project "install-storage" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app ruby~https://github.com/sclorg/ruby-ex.git

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc get storageclass
NAME                    PROVISIONER               RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE
nfs-storage (default)   nfs-storage-provisioner   Delete          Immediate           false                  327d
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc new-app --name postgresql-persistent --docker-image registry.redhat.io/rhel8/postgresql-12:1-43 -e POSTGRESQL_USER=redhat -e POSTGRESQL_PASSWORD=redhat123 -e POSTGRESQL_DATABASE=persistentdb
--> Found container image 667898a (9 months old) from registry.redhat.io for "registry.redhat.io/rhel8/postgresql-12:1-43"

    PostgreSQL 12 
    ------------- 
    PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.

    Tags: database, postgresql, postgresql12, postgresql-12

    * An image stream tag will be created as "postgresql-persistent:1-43" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "postgresql-persistent" created
    deployment.apps "postgresql-persistent" created
    service "postgresql-persistent" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose svc/postgresql-persistent' 
    Run 'oc status' to view your app.
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc set volumes deployment/postgresql-persistent --add --name postgresql-storage --type pvc --claim-class nfs-storage --claim-mode rwo --claim-size 10Gi --mount-path /var/lib/pgsql --claim-name postgresql-storage
deployment.apps/postgresql-persistent volume updated
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc get pvc
NAME                 STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE
postgresql-storage   Bound    pvc-008de2c4-2b33-4d5a-ae93-7ba3fb51662b   10Gi       RWO            nfs-storage    14s
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc get pv -o custom-columns=NAME:.metadata.name,CLAIM:.spec.claimRef.name
NAME                                       CLAIM
pvc-008de2c4-2b33-4d5a-ae93-7ba3fb51662b   postgresql-storage
pvc-26cc804a-4ec2-4f52-b6e5-84404b4b9def   image-registry-storage
pvc-31ebacd6-f65d-4ed3-8fc2-6629d0cb0ee5   nexus-pvc
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ cd ~/DO280/labs/install-storage
[student@workstation install-storage]$ 
[student@workstation install-storage]$ ./init_data.sh 
Populating characters table
CREATE TABLE
INSERT 0 5
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ ./check_data.sh 
Checking characters table
 id |          name           |           nationality            
----+-------------------------+----------------------------------
  1 | Wolfgang Amadeus Mozart | Prince-Archbishopric of Salzburg
  2 | Ludwig van Beethoven    | Bonn, Germany
  3 | Johann Sebastian Bach   | Eisenach, Germany
  4 | José Pablo Moncayo     | Guadalajara, México
  5 | Niccolò Paganini       | Genoa, Italy
(5 rows)

[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ oc delete all -l app=postgresql-persistent
service "postgresql-persistent" deleted
deployment.apps "postgresql-persistent" deleted
imagestream.image.openshift.io "postgresql-persistent" deleted
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ oc new-app --name postgresql-persistent2 --docker-image registry.redhat.io/rhel8/postgresql-12:1-43 -e POSTGRESQL_USER=redhat -e POSTGRESQL_PASSWORD=redhat123 -e POSTGRESQL_DATABASE=persistentdb
--> Found container image 667898a (9 months old) from registry.redhat.io for "registry.redhat.io/rhel8/postgresql-12:1-43"

    PostgreSQL 12 
    ------------- 
    PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.

    Tags: database, postgresql, postgresql12, postgresql-12

    * An image stream tag will be created as "postgresql-persistent2:1-43" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "postgresql-persistent2" created
    deployment.apps "postgresql-persistent2" created
    service "postgresql-persistent2" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose svc/postgresql-persistent2' 
    Run 'oc status' to view your app.
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ ./check_data.sh 
Checking characters table
ERROR: 'characters' table does not exist
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ oc set volumes deployment/postgresql-persistent2 --add --name postgresql-storage --type pvc --claim-name postgresql-storage --mount-path /var/lib/pgsql
deployment.apps/postgresql-persistent2 volume updated
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ ./check_data.sh 
Checking characters table
 id |          name           |           nationality            
----+-------------------------+----------------------------------
  1 | Wolfgang Amadeus Mozart | Prince-Archbishopric of Salzburg
  2 | Ludwig van Beethoven    | Bonn, Germany
  3 | Johann Sebastian Bach   | Eisenach, Germany
  4 | José Pablo Moncayo     | Guadalajara, México
  5 | Niccolò Paganini       | Genoa, Italy
(5 rows)

[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ oc delete all -l app=postgresql-persistent2
service "postgresql-persistent2" deleted
deployment.apps "postgresql-persistent2" deleted
imagestream.image.openshift.io "postgresql-persistent2" deleted
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ oc delete pvc/postgresql-storage
persistentvolumeclaim "postgresql-storage" deleted
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ 
[student@workstation install-storage]$ cd
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ lab install-storage finish

Completing Guided Exercise: Introducing OpenShift Dynamic Storage

 · Delete OpenShift project 'install-storage'..................  SUCCESS
 · Wait for project 'install-storage' to be gone...............  SUCCESS
 · Remove exercise files.......................................  SUCCESS

Please use start if you wish to do the exercise again.

[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 

